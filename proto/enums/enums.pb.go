// Code generated by protoc-gen-go. DO NOT EDIT.
// source: enums.proto

package enums

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Enum indicating builders used
type BuilderType int32

const (
	// Could not determine builder type
	BuilderType_UNKNOWN_BUILDER_TYPE BuilderType = 0
	// JIB Builder
	BuilderType_JIB BuilderType = 1
	// Bazel Builder
	BuilderType_BAZEL BuilderType = 2
	// Buildpacks Builder
	BuilderType_BUILDPACKS BuilderType = 3
	// Custom Builder
	BuilderType_CUSTOM BuilderType = 4
	// Kaniko Builder
	BuilderType_KANIKO BuilderType = 5
	// Docker Builder
	BuilderType_DOCKER BuilderType = 6
)

var BuilderType_name = map[int32]string{
	0: "UNKNOWN_BUILDER_TYPE",
	1: "JIB",
	2: "BAZEL",
	3: "BUILDPACKS",
	4: "CUSTOM",
	5: "KANIKO",
	6: "DOCKER",
}

var BuilderType_value = map[string]int32{
	"UNKNOWN_BUILDER_TYPE": 0,
	"JIB":                  1,
	"BAZEL":                2,
	"BUILDPACKS":           3,
	"CUSTOM":               4,
	"KANIKO":               5,
	"DOCKER":               6,
}

func (x BuilderType) String() string {
	return proto.EnumName(BuilderType_name, int32(x))
}

func (BuilderType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_888b6bd9597961ff, []int{0}
}

// Enum indicating build type i.e. local, cluster vs GCB
type BuildType int32

const (
	// Could not determine Build Type
	BuildType_UNKNOWN_BUILD_TYPE BuildType = 0
	// Cluster Build
	BuildType_CLUSTER BuildType = 1
	// GCB Build
	BuildType_GCB BuildType = 2
	// Local Build
	BuildType_LOCAL BuildType = 3
)

var BuildType_name = map[int32]string{
	0: "UNKNOWN_BUILD_TYPE",
	1: "CLUSTER",
	2: "GCB",
	3: "LOCAL",
}

var BuildType_value = map[string]int32{
	"UNKNOWN_BUILD_TYPE": 0,
	"CLUSTER":            1,
	"GCB":                2,
	"LOCAL":              3,
}

func (x BuildType) String() string {
	return proto.EnumName(BuildType_name, int32(x))
}

func (BuildType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_888b6bd9597961ff, []int{1}
}

// Enum indicating test tools used
type TesterType int32

const (
	// Could not determine Test Type
	TesterType_UNKNOWN_TEST_TYPE TesterType = 0
	// Unit tests
	TesterType_UNIT TesterType = 1
	// Container Structure tests
	TesterType_CONTAINER_STRUCTURE_TEST TesterType = 2
)

var TesterType_name = map[int32]string{
	0: "UNKNOWN_TEST_TYPE",
	1: "UNIT",
	2: "CONTAINER_STRUCTURE_TEST",
}

var TesterType_value = map[string]int32{
	"UNKNOWN_TEST_TYPE":        0,
	"UNIT":                     1,
	"CONTAINER_STRUCTURE_TEST": 2,
}

func (x TesterType) String() string {
	return proto.EnumName(TesterType_name, int32(x))
}

func (TesterType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_888b6bd9597961ff, []int{2}
}

// Enum indicating deploy tools used
type DeployerType int32

const (
	// Could not determine Deployer Type
	DeployerType_UNKNOWN_DEPLOYER_TYPE DeployerType = 0
	// Helm Deployer
	DeployerType_HELM DeployerType = 1
	// Kustomize Deployer
	DeployerType_KUSTOMIZE DeployerType = 2
	// Kubectl Deployer
	DeployerType_KUBECTL DeployerType = 3
	// kpt Deployer
	DeployerType_KPT DeployerType = 4
)

var DeployerType_name = map[int32]string{
	0: "UNKNOWN_DEPLOYER_TYPE",
	1: "HELM",
	2: "KUSTOMIZE",
	3: "KUBECTL",
	4: "KPT",
}

var DeployerType_value = map[string]int32{
	"UNKNOWN_DEPLOYER_TYPE": 0,
	"HELM":                  1,
	"KUSTOMIZE":             2,
	"KUBECTL":               3,
	"KPT":                   4,
}

func (x DeployerType) String() string {
	return proto.EnumName(DeployerType_name, int32(x))
}

func (DeployerType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_888b6bd9597961ff, []int{3}
}

// Enum indicating cluster type the application is deployed to
type ClusterType int32

const (
	// Could not determine Cluster Type
	ClusterType_UNKNOWN_CLUSTER_TYPE ClusterType = 0
	// Minikube Cluster
	ClusterType_MINIKUBE ClusterType = 1
	// GKE cluster
	ClusterType_GKE ClusterType = 2
	// All Cluster except Minikube and GKE
	ClusterType_OTHER ClusterType = 3
)

var ClusterType_name = map[int32]string{
	0: "UNKNOWN_CLUSTER_TYPE",
	1: "MINIKUBE",
	2: "GKE",
	3: "OTHER",
}

var ClusterType_value = map[string]int32{
	"UNKNOWN_CLUSTER_TYPE": 0,
	"MINIKUBE":             1,
	"GKE":                  2,
	"OTHER":                3,
}

func (x ClusterType) String() string {
	return proto.EnumName(ClusterType_name, int32(x))
}

func (ClusterType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_888b6bd9597961ff, []int{4}
}

// Enum indicating the log level of a line of output
type LogLevel int32

const (
	// Debug Level
	LogLevel_DEBUG LogLevel = 0
	// Info Level
	LogLevel_INFO LogLevel = 1
	// Warn Level
	LogLevel_WARN LogLevel = 2
	// Error Level
	LogLevel_ERROR LogLevel = 3
	// Fatal Level
	LogLevel_FATAL LogLevel = 4
	// Panic Level
	LogLevel_PANIC LogLevel = 5
)

var LogLevel_name = map[int32]string{
	0: "DEBUG",
	1: "INFO",
	2: "WARN",
	3: "ERROR",
	4: "FATAL",
	5: "PANIC",
}

var LogLevel_value = map[string]int32{
	"DEBUG": 0,
	"INFO":  1,
	"WARN":  2,
	"ERROR": 3,
	"FATAL": 4,
	"PANIC": 5,
}

func (x LogLevel) String() string {
	return proto.EnumName(LogLevel_name, int32(x))
}

func (LogLevel) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_888b6bd9597961ff, []int{5}
}

// Enum for Status codes<br>
// These error codes are prepended by Phase Name e.g.
// INIT, BUILD, TEST, DEPLOY, STATUSCHECK, DEVINIT<br>
// For Success Error codes, use range 200 to 250.<br>
// For Unknown error codes, use range 500 to 600.<br>
// For Cancelled Error code, use range 800 to 850.<br>
type StatusCode int32

const (
	// A default status code for events that do not have an associated phase.
	// Typically seen with the DevEndEvent event on success.
	StatusCode_OK StatusCode = 0
	// Status Check Success
	StatusCode_STATUSCHECK_SUCCESS StatusCode = 200
	// Build Success
	StatusCode_BUILD_SUCCESS StatusCode = 201
	// Render Success
	StatusCode_RENDER_SUCCESS StatusCode = 204
	// Deploy Success
	StatusCode_DEPLOY_SUCCESS StatusCode = 202
	// Test Success
	StatusCode_TEST_SUCCESS StatusCode = 203
	// Build error due to push access denied
	StatusCode_BUILD_PUSH_ACCESS_DENIED StatusCode = 101
	// Build error due to GCP project not found.
	StatusCode_BUILD_PROJECT_NOT_FOUND StatusCode = 102
	// Docker build error due to docker daemon not running
	StatusCode_BUILD_DOCKER_DAEMON_NOT_RUNNING StatusCode = 103
	// Build error due to user application code, e.g. compilation error, dockerfile error etc
	StatusCode_BUILD_USER_ERROR StatusCode = 104
	// Build error due to docker not available
	StatusCode_BUILD_DOCKER_UNAVAILABLE StatusCode = 105
	// Docker build error due to user not authorized to perform the action
	StatusCode_BUILD_DOCKER_UNAUTHORIZED StatusCode = 106
	// Docker system build error
	StatusCode_BUILD_DOCKER_SYSTEM_ERR StatusCode = 107
	// Docker build error due to Docker build container is already in the desired state
	StatusCode_BUILD_DOCKER_NOT_MODIFIED_ERR StatusCode = 108
	// Docker build error indicating a feature not supported
	StatusCode_BUILD_DOCKER_NOT_IMPLEMENTED_ERR StatusCode = 109
	// Docker build error indicates that for given build, data was lost or there is data corruption
	StatusCode_BUILD_DOCKER_DATA_LOSS_ERR StatusCode = 110
	// Docker build error indicates user is forbidden to perform the build or step/action.
	StatusCode_BUILD_DOCKER_FORBIDDEN_ERR StatusCode = 111
	// Docker build error due to some internal error and docker container state conflicts with the requested action and can't be performed
	StatusCode_BUILD_DOCKER_CONFLICT_ERR StatusCode = 112
	// Docker build error indicates the requested object does not exist
	StatusCode_BUILD_DOCKER_ERROR_NOT_FOUND StatusCode = 113
	// Docker build error indication invalid parameter sent to docker command
	StatusCode_BUILD_DOCKER_INVALID_PARAM_ERR StatusCode = 114
	// Docker build failed due to dockerfile not found
	StatusCode_BUILD_DOCKERFILE_NOT_FOUND StatusCode = 115
	// Docker build failed due `cacheFrom` user config error
	StatusCode_BUILD_DOCKER_CACHE_FROM_PULL_ERR StatusCode = 116
	// Build error due to digest for built artifact could not be retrieved from docker daemon.
	StatusCode_BUILD_DOCKER_GET_DIGEST_ERR StatusCode = 117
	// Build error due no space left in docker.
	StatusCode_BUILD_DOCKER_NO_SPACE_ERR StatusCode = 127
	// Build error due to digest for built artifact could not be retrieved from registry.
	StatusCode_BUILD_REGISTRY_GET_DIGEST_ERR StatusCode = 118
	// Build error indicating unknown Jib plugin type. Should be one of [maven, gradle]
	StatusCode_BUILD_UNKNOWN_JIB_PLUGIN_TYPE StatusCode = 119
	// Build error determining dependency for jib gradle project.
	StatusCode_BUILD_JIB_GRADLE_DEP_ERR StatusCode = 120
	// Build error determining dependency for jib gradle project.
	StatusCode_BUILD_JIB_MAVEN_DEP_ERR StatusCode = 121
	// Docker build error when listing containers.
	StatusCode_INIT_DOCKER_NETWORK_LISTING_CONTAINERS StatusCode = 122
	// Docker build error indicating an invalid container name (or id).
	StatusCode_INIT_DOCKER_NETWORK_INVALID_CONTAINER_NAME StatusCode = 123
	// Docker build error indicating the container referenced does not exists in the docker context used.
	StatusCode_INIT_DOCKER_NETWORK_CONTAINER_DOES_NOT_EXIST StatusCode = 124
	// Docker Network invalid mode
	StatusCode_INIT_DOCKER_NETWORK_INVALID_MODE StatusCode = 125
	// Error parsing Docker Network mode
	StatusCode_INIT_DOCKER_NETWORK_PARSE_ERR StatusCode = 126
	// Container image pull error
	StatusCode_STATUSCHECK_IMAGE_PULL_ERR StatusCode = 300
	// Container creating error
	StatusCode_STATUSCHECK_CONTAINER_CREATING StatusCode = 301
	// Container run error
	StatusCode_STATUSCHECK_RUN_CONTAINER_ERR StatusCode = 302
	// Container is already terminated
	StatusCode_STATUSCHECK_CONTAINER_TERMINATED StatusCode = 303
	// Deployment waiting for rollout
	StatusCode_STATUSCHECK_DEPLOYMENT_ROLLOUT_PENDING StatusCode = 304
	// Container restarting error
	StatusCode_STATUSCHECK_CONTAINER_RESTARTING StatusCode = 356
	// Readiness probe failed
	StatusCode_STATUSCHECK_UNHEALTHY StatusCode = 357
	// Node memory pressure error
	StatusCode_STATUSCHECK_NODE_MEMORY_PRESSURE StatusCode = 400
	// Node disk pressure error
	StatusCode_STATUSCHECK_NODE_DISK_PRESSURE StatusCode = 401
	// Node network unavailable error
	StatusCode_STATUSCHECK_NODE_NETWORK_UNAVAILABLE StatusCode = 402
	// Node PID pressure error
	StatusCode_STATUSCHECK_NODE_PID_PRESSURE StatusCode = 403
	// Node unschedulable error
	StatusCode_STATUSCHECK_NODE_UNSCHEDULABLE StatusCode = 404
	// Node unreachable error
	StatusCode_STATUSCHECK_NODE_UNREACHABLE StatusCode = 405
	// Node not ready error
	StatusCode_STATUSCHECK_NODE_NOT_READY StatusCode = 406
	// Scheduler failure error
	StatusCode_STATUSCHECK_FAILED_SCHEDULING StatusCode = 407
	// Kubectl connection error
	StatusCode_STATUSCHECK_KUBECTL_CONNECTION_ERR StatusCode = 409
	// Kubectl process killed error
	StatusCode_STATUSCHECK_KUBECTL_PID_KILLED StatusCode = 410
	// Kubectl client fetch err
	StatusCode_STATUSCHECK_KUBECTL_CLIENT_FETCH_ERR StatusCode = 411
	StatusCode_STATUSCHECK_DEPLOYMENT_FETCH_ERR     StatusCode = 412
	// Pod Initializing
	StatusCode_STATUSCHECK_POD_INITIALIZING StatusCode = 451
	// Could not determine error and phase
	StatusCode_UNKNOWN_ERROR StatusCode = 500
	// Status Check error unknown
	StatusCode_STATUSCHECK_UNKNOWN StatusCode = 501
	// Container is unschedulable due to unknown reasons
	StatusCode_STATUSCHECK_UNKNOWN_UNSCHEDULABLE StatusCode = 502
	// Container is waiting due to unknown reason
	StatusCode_STATUSCHECK_CONTAINER_WAITING_UNKNOWN StatusCode = 503
	// Container event reason unknown
	StatusCode_STATUSCHECK_UNKNOWN_EVENT StatusCode = 509
	// Deploy failed due to unknown reason
	StatusCode_DEPLOY_UNKNOWN StatusCode = 504
	// SYNC failed due to known reason
	StatusCode_SYNC_UNKNOWN StatusCode = 505
	// Build failed due to unknown reason
	StatusCode_BUILD_UNKNOWN StatusCode = 506
	// Dev Init failed due to unknown reason
	StatusCode_DEVINIT_UNKNOWN StatusCode = 507
	// Cleanup failed due to unknown reason
	StatusCode_CLEANUP_UNKNOWN StatusCode = 508
	// Initialization of the Skaffold session failed due to unknown reason(s)
	StatusCode_INIT_UNKNOWN StatusCode = 510
	// Build failed due to docker unknown error
	StatusCode_BUILD_DOCKER_UNKNOWN StatusCode = 511
	// Test failed due to unknown reason
	StatusCode_TEST_UNKNOWN StatusCode = 512
	// File Sync Initialize failure
	StatusCode_SYNC_INIT_ERROR StatusCode = 601
	// Failed to configure watcher for build dependencies in dev loop
	StatusCode_DEVINIT_REGISTER_BUILD_DEPS StatusCode = 701
	// Failed to configure watcher for test dependencies in dev loop
	StatusCode_DEVINIT_REGISTER_TEST_DEPS StatusCode = 702
	// Failed to configure watcher for deploy dependencies in dev loop
	StatusCode_DEVINIT_REGISTER_DEPLOY_DEPS StatusCode = 703
	// Failed to configure watcher for Skaffold configuration file.
	StatusCode_DEVINIT_REGISTER_CONFIG_DEP StatusCode = 704
	// Failed to configure watcher for build dependencies for a base image with v1 manifest.
	StatusCode_DEVINIT_UNSUPPORTED_V1_MANIFEST StatusCode = 705
	// User cancelled the skaffold dev run
	StatusCode_STATUSCHECK_USER_CANCELLED StatusCode = 800
	// Deadline for status check exceeded
	StatusCode_STATUSCHECK_DEADLINE_EXCEEDED StatusCode = 801
	// Build Cancelled
	StatusCode_BUILD_CANCELLED StatusCode = 802
	// Deploy cancelled due to user cancellation or one or more deployers failed.
	StatusCode_DEPLOY_CANCELLED StatusCode = 803
	// Docker build cancelled.
	StatusCode_BUILD_DOCKER_CANCELLED StatusCode = 804
	// Build error due to docker deadline was reached before the docker action completed
	StatusCode_BUILD_DOCKER_DEADLINE StatusCode = 805
	// Skaffold was unable to create the configured tagger
	StatusCode_INIT_CREATE_TAGGER_ERROR StatusCode = 901
	// Skaffold was unable to start as Minikube appears to be paused
	StatusCode_INIT_MINIKUBE_PAUSED_ERROR StatusCode = 902
	// Skaffold was unable to start as Minikube appears to be stopped
	StatusCode_INIT_MINIKUBE_NOT_RUNNING_ERROR StatusCode = 903
	// Skaffold was unable to create a configured image builder
	StatusCode_INIT_CREATE_BUILDER_ERROR StatusCode = 904
	// Skaffold was unable to create a configured deployer
	StatusCode_INIT_CREATE_DEPLOYER_ERROR StatusCode = 905
	// Skaffold was unable to create a configured test
	StatusCode_INIT_CREATE_TEST_DEP_ERROR StatusCode = 906
	// Skaffold encountered an error validating the artifact cache
	StatusCode_INIT_CACHE_ERROR StatusCode = 907
	// Skaffold encountered an error when configuring file watching
	StatusCode_INIT_CREATE_WATCH_TRIGGER_ERROR StatusCode = 908
	// Skaffold encountered an error when evaluating artifact dependencies
	StatusCode_INIT_CREATE_ARTIFACT_DEP_ERROR StatusCode = 909
	// Unable to connect to cluster
	StatusCode_DEPLOY_CLUSTER_CONNECTION_ERR StatusCode = 1001
	// Could not retrieve debug helpers.
	StatusCode_DEPLOY_DEBUG_HELPER_RETRIEVE_ERR StatusCode = 1002
	// Deploy clean up error
	StatusCode_DEPLOY_CLEANUP_ERR StatusCode = 1003
	// Unable to apply helm labels.
	StatusCode_DEPLOY_HELM_APPLY_LABELS StatusCode = 1004
	// Deploy error due to user deploy config for helm deployer
	StatusCode_DEPLOY_HELM_USER_ERR StatusCode = 1005
	// Helm error when no build result is found of value  specified in helm `artifactOverrides`
	StatusCode_DEPLOY_NO_MATCHING_BUILD StatusCode = 1006
	// Unable to get helm client version
	StatusCode_DEPLOY_HELM_VERSION_ERR StatusCode = 1007
	// Helm version not supported.
	StatusCode_DEPLOY_HELM_MIN_VERSION_ERR StatusCode = 1008
	// Unable to retrieve kubectl version
	StatusCode_DEPLOY_KUBECTL_VERSION_ERR StatusCode = 1109
	// User specified offline mode for rendering but remote manifests presents.
	StatusCode_DEPLOY_KUBECTL_OFFLINE_MODE_ERR StatusCode = 1010
	// Error waiting for previous version deletion before next version is active.
	StatusCode_DEPLOY_ERR_WAITING_FOR_DELETION StatusCode = 1011
	// Error reading manifests
	StatusCode_DEPLOY_READ_MANIFEST_ERR StatusCode = 1012
	// Error reading remote manifests
	StatusCode_DEPLOY_READ_REMOTE_MANIFEST_ERR StatusCode = 1013
	// Errors listing manifests
	StatusCode_DEPLOY_LIST_MANIFEST_ERR StatusCode = 1014
	// Deploy error due to user deploy config for kubectl deployer
	StatusCode_DEPLOY_KUBECTL_USER_ERR StatusCode = 1015
	// Deploy error due to user deploy config for kustomize deployer
	StatusCode_DEPLOY_KUSTOMIZE_USER_ERR StatusCode = 1016
	// Error replacing a built artifact in the manifests
	StatusCode_DEPLOY_REPLACE_IMAGE_ERR StatusCode = 1017
	// Error transforming a manifest during skaffold debug
	StatusCode_DEPLOY_TRANSFORM_MANIFEST_ERR StatusCode = 1018
	// Error setting user specified additional labels.
	StatusCode_DEPLOY_SET_LABEL_ERR StatusCode = 1019
	// Error writing hydrated kubernetes manifests.
	StatusCode_DEPLOY_MANIFEST_WRITE_ERR StatusCode = 1020
	// Error getting images from a kubernetes manifest.
	StatusCode_DEPLOY_PARSE_MANIFEST_IMAGES_ERR StatusCode = 1021
	// Helm config `createNamespace` not available
	StatusCode_DEPLOY_HELM_CREATE_NS_NOT_AVAILABLE StatusCode = 1022
	// Kubernetes cluster reported an internal system error
	StatusCode_DEPLOY_CLUSTER_INTERNAL_SYSTEM_ERR StatusCode = 1023
	// The Kptfile cannot be created via `kpt live init`.
	StatusCode_DEPLOY_KPTFILE_INIT_ERR StatusCode = 1024
	// Error expanding paths
	StatusCode_TEST_USER_CONFIG_ERR StatusCode = 1101
	// Error running container-structure-test
	StatusCode_TEST_CST_USER_ERR StatusCode = 1102
	// Unable to docker pull image
	StatusCode_TEST_IMG_PULL_ERR StatusCode = 1103
	// Unable to parse test command
	StatusCode_TEST_CUSTOM_CMD_PARSE_ERR StatusCode = 1104
	// Command returned non-zero exit code
	StatusCode_TEST_CUSTOM_CMD_RUN_NON_ZERO_EXIT_ERR StatusCode = 1105
	// command cancelled or timed out
	StatusCode_TEST_CUSTOM_CMD_RUN_TIMEDOUT_ERR StatusCode = 1106
	// command cancelled or timed out
	StatusCode_TEST_CUSTOM_CMD_RUN_CANCELLED_ERR StatusCode = 1107
	// command context error
	StatusCode_TEST_CUSTOM_CMD_RUN_EXECUTION_ERR StatusCode = 1108
	// command exited
	StatusCode_TEST_CUSTOM_CMD_RUN_EXITED_ERR StatusCode = 1110
	// error running cmd
	StatusCode_TEST_CUSTOM_CMD_RUN_ERR StatusCode = 1111
	// Error getting dependencies from command
	StatusCode_TEST_CUSTOM_DEPENDENCIES_CMD_ERR StatusCode = 1112
	// Unmarshalling dependency output error
	StatusCode_TEST_CUSTOM_DEPENDENCIES_UNMARSHALL_ERR StatusCode = 1113
	// Error retrieving the command
	StatusCode_TEST_CUSTOM_CMD_RETRIEVE_ERR StatusCode = 1114
	// Render errors
	// The Kptfile cannot be created via `kpt pkg init`.
	StatusCode_RENDER_KPTFILE_INIT_ERR StatusCode = 1501
	// The Kptfile is not a valid yaml file
	StatusCode_RENDER_KPTFILE_INVALID_YAML_ERR StatusCode = 1401
	// The Kptfile is not a valid API schema
	StatusCode_RENDER_KPTFILE_INVALID_SCHEMA_ERR StatusCode = 1402
	// Catch-all configuration file parsing error
	StatusCode_CONFIG_FILE_PARSING_ERR StatusCode = 1201
	// Main configuration file not found
	StatusCode_CONFIG_FILE_NOT_FOUND_ERR StatusCode = 1202
	// Dependency configuration file not found
	StatusCode_CONFIG_DEPENDENCY_NOT_FOUND_ERR StatusCode = 1203
	// Duplicate config names in the same configuration file
	StatusCode_CONFIG_DUPLICATE_NAMES_SAME_FILE_ERR StatusCode = 1204
	// Duplicate config names in two configuration files
	StatusCode_CONFIG_DUPLICATE_NAMES_ACROSS_FILES_ERR StatusCode = 1205
	// No configs matching configs filter
	StatusCode_CONFIG_BAD_FILTER_ERR StatusCode = 1206
	// No configs parsed from current file
	StatusCode_CONFIG_ZERO_FOUND_ERR StatusCode = 1207
	// Failed to apply profiles to config
	StatusCode_CONFIG_APPLY_PROFILES_ERR StatusCode = 1208
	// Failed to set default config values
	StatusCode_CONFIG_DEFAULT_VALUES_ERR StatusCode = 1209
	// Failed to substitute absolute file paths in config
	StatusCode_CONFIG_FILE_PATHS_SUBSTITUTION_ERR StatusCode = 1210
	// Same config imported at least twice with different set of profiles
	StatusCode_CONFIG_MULTI_IMPORT_PROFILE_CONFLICT_ERR StatusCode = 1211
	// Profile selection did not match known profile names
	StatusCode_CONFIG_PROFILES_NOT_FOUND_ERR StatusCode = 1212
	// Config API version not found
	StatusCode_CONFIG_UNKNOWN_API_VERSION_ERR StatusCode = 1213
	// The validator is not allowed in skaffold-managed mode.
	StatusCode_CONFIG_UNKNOWN_VALIDATOR StatusCode = 1214
	// The transformer is not allowed in skaffold-managed mode.
	StatusCode_CONFIG_UNKNOWN_TRANSFORMER StatusCode = 1215
	// Catch-all `skaffold inspect` command error
	StatusCode_INSPECT_UNKNOWN_ERR StatusCode = 1301
	// Trying to add new build environment that already exists
	StatusCode_INSPECT_BUILD_ENV_ALREADY_EXISTS_ERR StatusCode = 1302
	// Trying to modify build environment that doesn't exist
	StatusCode_INSPECT_BUILD_ENV_INCORRECT_TYPE_ERR StatusCode = 1303
	// Trying to modify a profile that doesn't exist
	StatusCode_INSPECT_PROFILE_NOT_FOUND_ERR StatusCode = 1304
)

var StatusCode_name = map[int32]string{
	0:    "OK",
	200:  "STATUSCHECK_SUCCESS",
	201:  "BUILD_SUCCESS",
	204:  "RENDER_SUCCESS",
	202:  "DEPLOY_SUCCESS",
	203:  "TEST_SUCCESS",
	101:  "BUILD_PUSH_ACCESS_DENIED",
	102:  "BUILD_PROJECT_NOT_FOUND",
	103:  "BUILD_DOCKER_DAEMON_NOT_RUNNING",
	104:  "BUILD_USER_ERROR",
	105:  "BUILD_DOCKER_UNAVAILABLE",
	106:  "BUILD_DOCKER_UNAUTHORIZED",
	107:  "BUILD_DOCKER_SYSTEM_ERR",
	108:  "BUILD_DOCKER_NOT_MODIFIED_ERR",
	109:  "BUILD_DOCKER_NOT_IMPLEMENTED_ERR",
	110:  "BUILD_DOCKER_DATA_LOSS_ERR",
	111:  "BUILD_DOCKER_FORBIDDEN_ERR",
	112:  "BUILD_DOCKER_CONFLICT_ERR",
	113:  "BUILD_DOCKER_ERROR_NOT_FOUND",
	114:  "BUILD_DOCKER_INVALID_PARAM_ERR",
	115:  "BUILD_DOCKERFILE_NOT_FOUND",
	116:  "BUILD_DOCKER_CACHE_FROM_PULL_ERR",
	117:  "BUILD_DOCKER_GET_DIGEST_ERR",
	127:  "BUILD_DOCKER_NO_SPACE_ERR",
	118:  "BUILD_REGISTRY_GET_DIGEST_ERR",
	119:  "BUILD_UNKNOWN_JIB_PLUGIN_TYPE",
	120:  "BUILD_JIB_GRADLE_DEP_ERR",
	121:  "BUILD_JIB_MAVEN_DEP_ERR",
	122:  "INIT_DOCKER_NETWORK_LISTING_CONTAINERS",
	123:  "INIT_DOCKER_NETWORK_INVALID_CONTAINER_NAME",
	124:  "INIT_DOCKER_NETWORK_CONTAINER_DOES_NOT_EXIST",
	125:  "INIT_DOCKER_NETWORK_INVALID_MODE",
	126:  "INIT_DOCKER_NETWORK_PARSE_ERR",
	300:  "STATUSCHECK_IMAGE_PULL_ERR",
	301:  "STATUSCHECK_CONTAINER_CREATING",
	302:  "STATUSCHECK_RUN_CONTAINER_ERR",
	303:  "STATUSCHECK_CONTAINER_TERMINATED",
	304:  "STATUSCHECK_DEPLOYMENT_ROLLOUT_PENDING",
	356:  "STATUSCHECK_CONTAINER_RESTARTING",
	357:  "STATUSCHECK_UNHEALTHY",
	400:  "STATUSCHECK_NODE_MEMORY_PRESSURE",
	401:  "STATUSCHECK_NODE_DISK_PRESSURE",
	402:  "STATUSCHECK_NODE_NETWORK_UNAVAILABLE",
	403:  "STATUSCHECK_NODE_PID_PRESSURE",
	404:  "STATUSCHECK_NODE_UNSCHEDULABLE",
	405:  "STATUSCHECK_NODE_UNREACHABLE",
	406:  "STATUSCHECK_NODE_NOT_READY",
	407:  "STATUSCHECK_FAILED_SCHEDULING",
	409:  "STATUSCHECK_KUBECTL_CONNECTION_ERR",
	410:  "STATUSCHECK_KUBECTL_PID_KILLED",
	411:  "STATUSCHECK_KUBECTL_CLIENT_FETCH_ERR",
	412:  "STATUSCHECK_DEPLOYMENT_FETCH_ERR",
	451:  "STATUSCHECK_POD_INITIALIZING",
	500:  "UNKNOWN_ERROR",
	501:  "STATUSCHECK_UNKNOWN",
	502:  "STATUSCHECK_UNKNOWN_UNSCHEDULABLE",
	503:  "STATUSCHECK_CONTAINER_WAITING_UNKNOWN",
	509:  "STATUSCHECK_UNKNOWN_EVENT",
	504:  "DEPLOY_UNKNOWN",
	505:  "SYNC_UNKNOWN",
	506:  "BUILD_UNKNOWN",
	507:  "DEVINIT_UNKNOWN",
	508:  "CLEANUP_UNKNOWN",
	510:  "INIT_UNKNOWN",
	511:  "BUILD_DOCKER_UNKNOWN",
	512:  "TEST_UNKNOWN",
	601:  "SYNC_INIT_ERROR",
	701:  "DEVINIT_REGISTER_BUILD_DEPS",
	702:  "DEVINIT_REGISTER_TEST_DEPS",
	703:  "DEVINIT_REGISTER_DEPLOY_DEPS",
	704:  "DEVINIT_REGISTER_CONFIG_DEP",
	705:  "DEVINIT_UNSUPPORTED_V1_MANIFEST",
	800:  "STATUSCHECK_USER_CANCELLED",
	801:  "STATUSCHECK_DEADLINE_EXCEEDED",
	802:  "BUILD_CANCELLED",
	803:  "DEPLOY_CANCELLED",
	804:  "BUILD_DOCKER_CANCELLED",
	805:  "BUILD_DOCKER_DEADLINE",
	901:  "INIT_CREATE_TAGGER_ERROR",
	902:  "INIT_MINIKUBE_PAUSED_ERROR",
	903:  "INIT_MINIKUBE_NOT_RUNNING_ERROR",
	904:  "INIT_CREATE_BUILDER_ERROR",
	905:  "INIT_CREATE_DEPLOYER_ERROR",
	906:  "INIT_CREATE_TEST_DEP_ERROR",
	907:  "INIT_CACHE_ERROR",
	908:  "INIT_CREATE_WATCH_TRIGGER_ERROR",
	909:  "INIT_CREATE_ARTIFACT_DEP_ERROR",
	1001: "DEPLOY_CLUSTER_CONNECTION_ERR",
	1002: "DEPLOY_DEBUG_HELPER_RETRIEVE_ERR",
	1003: "DEPLOY_CLEANUP_ERR",
	1004: "DEPLOY_HELM_APPLY_LABELS",
	1005: "DEPLOY_HELM_USER_ERR",
	1006: "DEPLOY_NO_MATCHING_BUILD",
	1007: "DEPLOY_HELM_VERSION_ERR",
	1008: "DEPLOY_HELM_MIN_VERSION_ERR",
	1109: "DEPLOY_KUBECTL_VERSION_ERR",
	1010: "DEPLOY_KUBECTL_OFFLINE_MODE_ERR",
	1011: "DEPLOY_ERR_WAITING_FOR_DELETION",
	1012: "DEPLOY_READ_MANIFEST_ERR",
	1013: "DEPLOY_READ_REMOTE_MANIFEST_ERR",
	1014: "DEPLOY_LIST_MANIFEST_ERR",
	1015: "DEPLOY_KUBECTL_USER_ERR",
	1016: "DEPLOY_KUSTOMIZE_USER_ERR",
	1017: "DEPLOY_REPLACE_IMAGE_ERR",
	1018: "DEPLOY_TRANSFORM_MANIFEST_ERR",
	1019: "DEPLOY_SET_LABEL_ERR",
	1020: "DEPLOY_MANIFEST_WRITE_ERR",
	1021: "DEPLOY_PARSE_MANIFEST_IMAGES_ERR",
	1022: "DEPLOY_HELM_CREATE_NS_NOT_AVAILABLE",
	1023: "DEPLOY_CLUSTER_INTERNAL_SYSTEM_ERR",
	1024: "DEPLOY_KPTFILE_INIT_ERR",
	1101: "TEST_USER_CONFIG_ERR",
	1102: "TEST_CST_USER_ERR",
	1103: "TEST_IMG_PULL_ERR",
	1104: "TEST_CUSTOM_CMD_PARSE_ERR",
	1105: "TEST_CUSTOM_CMD_RUN_NON_ZERO_EXIT_ERR",
	1106: "TEST_CUSTOM_CMD_RUN_TIMEDOUT_ERR",
	1107: "TEST_CUSTOM_CMD_RUN_CANCELLED_ERR",
	1108: "TEST_CUSTOM_CMD_RUN_EXECUTION_ERR",
	1110: "TEST_CUSTOM_CMD_RUN_EXITED_ERR",
	1111: "TEST_CUSTOM_CMD_RUN_ERR",
	1112: "TEST_CUSTOM_DEPENDENCIES_CMD_ERR",
	1113: "TEST_CUSTOM_DEPENDENCIES_UNMARSHALL_ERR",
	1114: "TEST_CUSTOM_CMD_RETRIEVE_ERR",
	1501: "RENDER_KPTFILE_INIT_ERR",
	1401: "RENDER_KPTFILE_INVALID_YAML_ERR",
	1402: "RENDER_KPTFILE_INVALID_SCHEMA_ERR",
	1201: "CONFIG_FILE_PARSING_ERR",
	1202: "CONFIG_FILE_NOT_FOUND_ERR",
	1203: "CONFIG_DEPENDENCY_NOT_FOUND_ERR",
	1204: "CONFIG_DUPLICATE_NAMES_SAME_FILE_ERR",
	1205: "CONFIG_DUPLICATE_NAMES_ACROSS_FILES_ERR",
	1206: "CONFIG_BAD_FILTER_ERR",
	1207: "CONFIG_ZERO_FOUND_ERR",
	1208: "CONFIG_APPLY_PROFILES_ERR",
	1209: "CONFIG_DEFAULT_VALUES_ERR",
	1210: "CONFIG_FILE_PATHS_SUBSTITUTION_ERR",
	1211: "CONFIG_MULTI_IMPORT_PROFILE_CONFLICT_ERR",
	1212: "CONFIG_PROFILES_NOT_FOUND_ERR",
	1213: "CONFIG_UNKNOWN_API_VERSION_ERR",
	1214: "CONFIG_UNKNOWN_VALIDATOR",
	1215: "CONFIG_UNKNOWN_TRANSFORMER",
	1301: "INSPECT_UNKNOWN_ERR",
	1302: "INSPECT_BUILD_ENV_ALREADY_EXISTS_ERR",
	1303: "INSPECT_BUILD_ENV_INCORRECT_TYPE_ERR",
	1304: "INSPECT_PROFILE_NOT_FOUND_ERR",
}

var StatusCode_value = map[string]int32{
	"OK":                                           0,
	"STATUSCHECK_SUCCESS":                          200,
	"BUILD_SUCCESS":                                201,
	"RENDER_SUCCESS":                               204,
	"DEPLOY_SUCCESS":                               202,
	"TEST_SUCCESS":                                 203,
	"BUILD_PUSH_ACCESS_DENIED":                     101,
	"BUILD_PROJECT_NOT_FOUND":                      102,
	"BUILD_DOCKER_DAEMON_NOT_RUNNING":              103,
	"BUILD_USER_ERROR":                             104,
	"BUILD_DOCKER_UNAVAILABLE":                     105,
	"BUILD_DOCKER_UNAUTHORIZED":                    106,
	"BUILD_DOCKER_SYSTEM_ERR":                      107,
	"BUILD_DOCKER_NOT_MODIFIED_ERR":                108,
	"BUILD_DOCKER_NOT_IMPLEMENTED_ERR":             109,
	"BUILD_DOCKER_DATA_LOSS_ERR":                   110,
	"BUILD_DOCKER_FORBIDDEN_ERR":                   111,
	"BUILD_DOCKER_CONFLICT_ERR":                    112,
	"BUILD_DOCKER_ERROR_NOT_FOUND":                 113,
	"BUILD_DOCKER_INVALID_PARAM_ERR":               114,
	"BUILD_DOCKERFILE_NOT_FOUND":                   115,
	"BUILD_DOCKER_CACHE_FROM_PULL_ERR":             116,
	"BUILD_DOCKER_GET_DIGEST_ERR":                  117,
	"BUILD_DOCKER_NO_SPACE_ERR":                    127,
	"BUILD_REGISTRY_GET_DIGEST_ERR":                118,
	"BUILD_UNKNOWN_JIB_PLUGIN_TYPE":                119,
	"BUILD_JIB_GRADLE_DEP_ERR":                     120,
	"BUILD_JIB_MAVEN_DEP_ERR":                      121,
	"INIT_DOCKER_NETWORK_LISTING_CONTAINERS":       122,
	"INIT_DOCKER_NETWORK_INVALID_CONTAINER_NAME":   123,
	"INIT_DOCKER_NETWORK_CONTAINER_DOES_NOT_EXIST": 124,
	"INIT_DOCKER_NETWORK_INVALID_MODE":             125,
	"INIT_DOCKER_NETWORK_PARSE_ERR":                126,
	"STATUSCHECK_IMAGE_PULL_ERR":                   300,
	"STATUSCHECK_CONTAINER_CREATING":               301,
	"STATUSCHECK_RUN_CONTAINER_ERR":                302,
	"STATUSCHECK_CONTAINER_TERMINATED":             303,
	"STATUSCHECK_DEPLOYMENT_ROLLOUT_PENDING":       304,
	"STATUSCHECK_CONTAINER_RESTARTING":             356,
	"STATUSCHECK_UNHEALTHY":                        357,
	"STATUSCHECK_NODE_MEMORY_PRESSURE":             400,
	"STATUSCHECK_NODE_DISK_PRESSURE":               401,
	"STATUSCHECK_NODE_NETWORK_UNAVAILABLE":         402,
	"STATUSCHECK_NODE_PID_PRESSURE":                403,
	"STATUSCHECK_NODE_UNSCHEDULABLE":               404,
	"STATUSCHECK_NODE_UNREACHABLE":                 405,
	"STATUSCHECK_NODE_NOT_READY":                   406,
	"STATUSCHECK_FAILED_SCHEDULING":                407,
	"STATUSCHECK_KUBECTL_CONNECTION_ERR":           409,
	"STATUSCHECK_KUBECTL_PID_KILLED":               410,
	"STATUSCHECK_KUBECTL_CLIENT_FETCH_ERR":         411,
	"STATUSCHECK_DEPLOYMENT_FETCH_ERR":             412,
	"STATUSCHECK_POD_INITIALIZING":                 451,
	"UNKNOWN_ERROR":                                500,
	"STATUSCHECK_UNKNOWN":                          501,
	"STATUSCHECK_UNKNOWN_UNSCHEDULABLE":            502,
	"STATUSCHECK_CONTAINER_WAITING_UNKNOWN":        503,
	"STATUSCHECK_UNKNOWN_EVENT":                    509,
	"DEPLOY_UNKNOWN":                               504,
	"SYNC_UNKNOWN":                                 505,
	"BUILD_UNKNOWN":                                506,
	"DEVINIT_UNKNOWN":                              507,
	"CLEANUP_UNKNOWN":                              508,
	"INIT_UNKNOWN":                                 510,
	"BUILD_DOCKER_UNKNOWN":                         511,
	"TEST_UNKNOWN":                                 512,
	"SYNC_INIT_ERROR":                              601,
	"DEVINIT_REGISTER_BUILD_DEPS":                  701,
	"DEVINIT_REGISTER_TEST_DEPS":                   702,
	"DEVINIT_REGISTER_DEPLOY_DEPS":                 703,
	"DEVINIT_REGISTER_CONFIG_DEP":                  704,
	"DEVINIT_UNSUPPORTED_V1_MANIFEST":              705,
	"STATUSCHECK_USER_CANCELLED":                   800,
	"STATUSCHECK_DEADLINE_EXCEEDED":                801,
	"BUILD_CANCELLED":                              802,
	"DEPLOY_CANCELLED":                             803,
	"BUILD_DOCKER_CANCELLED":                       804,
	"BUILD_DOCKER_DEADLINE":                        805,
	"INIT_CREATE_TAGGER_ERROR":                     901,
	"INIT_MINIKUBE_PAUSED_ERROR":                   902,
	"INIT_MINIKUBE_NOT_RUNNING_ERROR":              903,
	"INIT_CREATE_BUILDER_ERROR":                    904,
	"INIT_CREATE_DEPLOYER_ERROR":                   905,
	"INIT_CREATE_TEST_DEP_ERROR":                   906,
	"INIT_CACHE_ERROR":                             907,
	"INIT_CREATE_WATCH_TRIGGER_ERROR":              908,
	"INIT_CREATE_ARTIFACT_DEP_ERROR":               909,
	"DEPLOY_CLUSTER_CONNECTION_ERR":                1001,
	"DEPLOY_DEBUG_HELPER_RETRIEVE_ERR":             1002,
	"DEPLOY_CLEANUP_ERR":                           1003,
	"DEPLOY_HELM_APPLY_LABELS":                     1004,
	"DEPLOY_HELM_USER_ERR":                         1005,
	"DEPLOY_NO_MATCHING_BUILD":                     1006,
	"DEPLOY_HELM_VERSION_ERR":                      1007,
	"DEPLOY_HELM_MIN_VERSION_ERR":                  1008,
	"DEPLOY_KUBECTL_VERSION_ERR":                   1109,
	"DEPLOY_KUBECTL_OFFLINE_MODE_ERR":              1010,
	"DEPLOY_ERR_WAITING_FOR_DELETION":              1011,
	"DEPLOY_READ_MANIFEST_ERR":                     1012,
	"DEPLOY_READ_REMOTE_MANIFEST_ERR":              1013,
	"DEPLOY_LIST_MANIFEST_ERR":                     1014,
	"DEPLOY_KUBECTL_USER_ERR":                      1015,
	"DEPLOY_KUSTOMIZE_USER_ERR":                    1016,
	"DEPLOY_REPLACE_IMAGE_ERR":                     1017,
	"DEPLOY_TRANSFORM_MANIFEST_ERR":                1018,
	"DEPLOY_SET_LABEL_ERR":                         1019,
	"DEPLOY_MANIFEST_WRITE_ERR":                    1020,
	"DEPLOY_PARSE_MANIFEST_IMAGES_ERR":             1021,
	"DEPLOY_HELM_CREATE_NS_NOT_AVAILABLE":          1022,
	"DEPLOY_CLUSTER_INTERNAL_SYSTEM_ERR":           1023,
	"DEPLOY_KPTFILE_INIT_ERR":                      1024,
	"TEST_USER_CONFIG_ERR":                         1101,
	"TEST_CST_USER_ERR":                            1102,
	"TEST_IMG_PULL_ERR":                            1103,
	"TEST_CUSTOM_CMD_PARSE_ERR":                    1104,
	"TEST_CUSTOM_CMD_RUN_NON_ZERO_EXIT_ERR":        1105,
	"TEST_CUSTOM_CMD_RUN_TIMEDOUT_ERR":             1106,
	"TEST_CUSTOM_CMD_RUN_CANCELLED_ERR":            1107,
	"TEST_CUSTOM_CMD_RUN_EXECUTION_ERR":            1108,
	"TEST_CUSTOM_CMD_RUN_EXITED_ERR":               1110,
	"TEST_CUSTOM_CMD_RUN_ERR":                      1111,
	"TEST_CUSTOM_DEPENDENCIES_CMD_ERR":             1112,
	"TEST_CUSTOM_DEPENDENCIES_UNMARSHALL_ERR":      1113,
	"TEST_CUSTOM_CMD_RETRIEVE_ERR":                 1114,
	"RENDER_KPTFILE_INIT_ERR":                      1501,
	"RENDER_KPTFILE_INVALID_YAML_ERR":              1401,
	"RENDER_KPTFILE_INVALID_SCHEMA_ERR":            1402,
	"CONFIG_FILE_PARSING_ERR":                      1201,
	"CONFIG_FILE_NOT_FOUND_ERR":                    1202,
	"CONFIG_DEPENDENCY_NOT_FOUND_ERR":              1203,
	"CONFIG_DUPLICATE_NAMES_SAME_FILE_ERR":         1204,
	"CONFIG_DUPLICATE_NAMES_ACROSS_FILES_ERR":      1205,
	"CONFIG_BAD_FILTER_ERR":                        1206,
	"CONFIG_ZERO_FOUND_ERR":                        1207,
	"CONFIG_APPLY_PROFILES_ERR":                    1208,
	"CONFIG_DEFAULT_VALUES_ERR":                    1209,
	"CONFIG_FILE_PATHS_SUBSTITUTION_ERR":           1210,
	"CONFIG_MULTI_IMPORT_PROFILE_CONFLICT_ERR":     1211,
	"CONFIG_PROFILES_NOT_FOUND_ERR":                1212,
	"CONFIG_UNKNOWN_API_VERSION_ERR":               1213,
	"CONFIG_UNKNOWN_VALIDATOR":                     1214,
	"CONFIG_UNKNOWN_TRANSFORMER":                   1215,
	"INSPECT_UNKNOWN_ERR":                          1301,
	"INSPECT_BUILD_ENV_ALREADY_EXISTS_ERR":         1302,
	"INSPECT_BUILD_ENV_INCORRECT_TYPE_ERR":         1303,
	"INSPECT_PROFILE_NOT_FOUND_ERR":                1304,
}

func (x StatusCode) String() string {
	return proto.EnumName(StatusCode_name, int32(x))
}

func (StatusCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_888b6bd9597961ff, []int{6}
}

// Enum for Suggestion codes
type SuggestionCode int32

const (
	// default nil suggestion.
	// This is usually set when no error happens.
	SuggestionCode_NIL SuggestionCode = 0
	// Add Default Repo
	SuggestionCode_ADD_DEFAULT_REPO SuggestionCode = 100
	// Verify Default Repo
	SuggestionCode_CHECK_DEFAULT_REPO SuggestionCode = 101
	// Verify default repo in the global config
	SuggestionCode_CHECK_DEFAULT_REPO_GLOBAL_CONFIG SuggestionCode = 102
	// run gcloud docker auth configure
	SuggestionCode_GCLOUD_DOCKER_AUTH_CONFIGURE SuggestionCode = 103
	// Run docker auth configure
	SuggestionCode_DOCKER_AUTH_CONFIGURE SuggestionCode = 104
	// Verify Gcloud Project
	SuggestionCode_CHECK_GCLOUD_PROJECT SuggestionCode = 105
	// Check if docker is running
	SuggestionCode_CHECK_DOCKER_RUNNING SuggestionCode = 106
	// Fix User Build Error
	SuggestionCode_FIX_USER_BUILD_ERR SuggestionCode = 107
	// Docker build internal error, try again
	SuggestionCode_DOCKER_BUILD_RETRY SuggestionCode = 108
	// Fix `cacheFrom` config for given artifact and try again
	SuggestionCode_FIX_CACHE_FROM_ARTIFACT_CONFIG SuggestionCode = 109
	// Fix `dockerfile` config for a given artifact and try again.
	SuggestionCode_FIX_SKAFFOLD_CONFIG_DOCKERFILE SuggestionCode = 110
	// Use a supported Jib plugin type
	SuggestionCode_FIX_JIB_PLUGIN_CONFIGURATION SuggestionCode = 111
	// Docker build network invalid docker container name (or id).
	SuggestionCode_FIX_DOCKER_NETWORK_CONTAINER_NAME SuggestionCode = 112
	// Docker build network container not existing in the current context.
	SuggestionCode_CHECK_DOCKER_NETWORK_CONTAINER_RUNNING SuggestionCode = 113
	// Executing extractContainerNameFromNetworkMode with a non valid mode (only container mode allowed)
	SuggestionCode_FIX_DOCKER_NETWORK_MODE_WHEN_EXTRACTING_CONTAINER_NAME SuggestionCode = 114
	// Prune Docker image
	SuggestionCode_RUN_DOCKER_PRUNE SuggestionCode = 115
	// Set Cleanup flag for skaffold command.
	SuggestionCode_SET_CLEANUP_FLAG SuggestionCode = 116
	// Check cluster connection
	SuggestionCode_CHECK_CLUSTER_CONNECTION SuggestionCode = 201
	// Check minikube status
	SuggestionCode_CHECK_MINIKUBE_STATUS SuggestionCode = 202
	// Install helm tool
	SuggestionCode_INSTALL_HELM SuggestionCode = 203
	// Upgrade helm tool
	SuggestionCode_UPGRADE_HELM SuggestionCode = 204
	// Fix helm `releases.artifactOverrides` config to match with `build.artiofacts`
	SuggestionCode_FIX_SKAFFOLD_CONFIG_HELM_ARTIFACT_OVERRIDES SuggestionCode = 205
	// Upgrade helm version to v3.2.0 and higher.
	SuggestionCode_UPGRADE_HELM32 SuggestionCode = 206
	// Set `releases.createNamespace` to false.
	SuggestionCode_FIX_SKAFFOLD_CONFIG_HELM_CREATE_NAMESPACE SuggestionCode = 207
	// Install kubectl tool
	SuggestionCode_INSTALL_KUBECTL SuggestionCode = 220
	// Container run error
	SuggestionCode_CHECK_CONTAINER_LOGS SuggestionCode = 301
	// Pod Health check error
	SuggestionCode_CHECK_READINESS_PROBE SuggestionCode = 302
	// Check Container image
	SuggestionCode_CHECK_CONTAINER_IMAGE SuggestionCode = 303
	// Node pressure error
	SuggestionCode_ADDRESS_NODE_MEMORY_PRESSURE SuggestionCode = 400
	// Node disk pressure error
	SuggestionCode_ADDRESS_NODE_DISK_PRESSURE SuggestionCode = 401
	// Node network unavailable error
	SuggestionCode_ADDRESS_NODE_NETWORK_UNAVAILABLE SuggestionCode = 402
	// Node PID pressure error
	SuggestionCode_ADDRESS_NODE_PID_PRESSURE SuggestionCode = 403
	// Node unschedulable error
	SuggestionCode_ADDRESS_NODE_UNSCHEDULABLE SuggestionCode = 404
	// Node unreachable error
	SuggestionCode_ADDRESS_NODE_UNREACHABLE SuggestionCode = 405
	// Node not ready error
	SuggestionCode_ADDRESS_NODE_NOT_READY SuggestionCode = 406
	// Scheduler failure error
	SuggestionCode_ADDRESS_FAILED_SCHEDULING SuggestionCode = 407
	// Cluster Connectivity error
	SuggestionCode_CHECK_HOST_CONNECTION SuggestionCode = 408
	// Minikube is stopped: use `minikube start`
	SuggestionCode_START_MINIKUBE SuggestionCode = 501
	// Minikube is paused: use `minikube unpause`
	SuggestionCode_UNPAUSE_MINIKUBE SuggestionCode = 502
	// Run Docker pull for the image with v1 manifest and try again.
	SuggestionCode_RUN_DOCKER_PULL SuggestionCode = 551
	// Rerun with correct offline flag value.
	SuggestionCode_SET_RENDER_FLAG_OFFLINE_FALSE SuggestionCode = 600
	// Manually run `kpt pkg init` or `kpt live init`
	SuggestionCode_KPTFILE_MANUAL_INIT SuggestionCode = 601
	// Check if the Kptfile is correct.
	SuggestionCode_KPTFILE_CHECK_YAML SuggestionCode = 602
	// Check configuration file path
	SuggestionCode_CONFIG_CHECK_FILE_PATH SuggestionCode = 700
	// Check dependency config definition
	SuggestionCode_CONFIG_CHECK_DEPENDENCY_DEFINITION SuggestionCode = 701
	// Change config name to avoid duplicates
	SuggestionCode_CONFIG_CHANGE_NAMES SuggestionCode = 702
	// Check config filter
	SuggestionCode_CONFIG_CHECK_FILTER SuggestionCode = 703
	// Check profile definition in current config
	SuggestionCode_CONFIG_CHECK_PROFILE_DEFINITION SuggestionCode = 704
	// Check active profile selection for dependency config
	SuggestionCode_CONFIG_CHECK_DEPENDENCY_PROFILES_SELECTION SuggestionCode = 705
	// Check profile selection flag
	SuggestionCode_CONFIG_CHECK_PROFILE_SELECTION SuggestionCode = 706
	// Fix config API version or upgrade the skaffold binary
	SuggestionCode_CONFIG_FIX_API_VERSION SuggestionCode = 707
	// Only the allow listed validators are acceptable in skaffold-managed mode.
	SuggestionCode_CONFIG_ALLOWLIST_VALIDATORS SuggestionCode = 708
	// Only the allow listed transformers are acceptable in skaffold-managed mode.
	SuggestionCode_CONFIG_ALLOWLIST_transformers SuggestionCode = 709
	// Create new build env in a profile instead, or use the 'modify' command
	SuggestionCode_INSPECT_USE_MODIFY_OR_NEW_PROFILE SuggestionCode = 800
	// Check profile selection, or use the 'add' command instead
	SuggestionCode_INSPECT_USE_ADD_BUILD_ENV SuggestionCode = 801
	// Check profile flag value
	SuggestionCode_INSPECT_CHECK_INPUT_PROFILE SuggestionCode = 802
	// Open an issue so this situation can be diagnosed
	SuggestionCode_OPEN_ISSUE SuggestionCode = 900
	// Test error suggestion codes
	SuggestionCode_CHECK_CUSTOM_COMMAND                    SuggestionCode = 1000
	SuggestionCode_FIX_CUSTOM_COMMAND_TIMEOUT              SuggestionCode = 1001
	SuggestionCode_CHECK_CUSTOM_COMMAND_DEPENDENCIES_CMD   SuggestionCode = 1002
	SuggestionCode_CHECK_CUSTOM_COMMAND_DEPENDENCIES_PATHS SuggestionCode = 1003
	SuggestionCode_CHECK_TEST_COMMAND_AND_IMAGE_NAME       SuggestionCode = 1004
)

var SuggestionCode_name = map[int32]string{
	0:    "NIL",
	100:  "ADD_DEFAULT_REPO",
	101:  "CHECK_DEFAULT_REPO",
	102:  "CHECK_DEFAULT_REPO_GLOBAL_CONFIG",
	103:  "GCLOUD_DOCKER_AUTH_CONFIGURE",
	104:  "DOCKER_AUTH_CONFIGURE",
	105:  "CHECK_GCLOUD_PROJECT",
	106:  "CHECK_DOCKER_RUNNING",
	107:  "FIX_USER_BUILD_ERR",
	108:  "DOCKER_BUILD_RETRY",
	109:  "FIX_CACHE_FROM_ARTIFACT_CONFIG",
	110:  "FIX_SKAFFOLD_CONFIG_DOCKERFILE",
	111:  "FIX_JIB_PLUGIN_CONFIGURATION",
	112:  "FIX_DOCKER_NETWORK_CONTAINER_NAME",
	113:  "CHECK_DOCKER_NETWORK_CONTAINER_RUNNING",
	114:  "FIX_DOCKER_NETWORK_MODE_WHEN_EXTRACTING_CONTAINER_NAME",
	115:  "RUN_DOCKER_PRUNE",
	116:  "SET_CLEANUP_FLAG",
	201:  "CHECK_CLUSTER_CONNECTION",
	202:  "CHECK_MINIKUBE_STATUS",
	203:  "INSTALL_HELM",
	204:  "UPGRADE_HELM",
	205:  "FIX_SKAFFOLD_CONFIG_HELM_ARTIFACT_OVERRIDES",
	206:  "UPGRADE_HELM32",
	207:  "FIX_SKAFFOLD_CONFIG_HELM_CREATE_NAMESPACE",
	220:  "INSTALL_KUBECTL",
	301:  "CHECK_CONTAINER_LOGS",
	302:  "CHECK_READINESS_PROBE",
	303:  "CHECK_CONTAINER_IMAGE",
	400:  "ADDRESS_NODE_MEMORY_PRESSURE",
	401:  "ADDRESS_NODE_DISK_PRESSURE",
	402:  "ADDRESS_NODE_NETWORK_UNAVAILABLE",
	403:  "ADDRESS_NODE_PID_PRESSURE",
	404:  "ADDRESS_NODE_UNSCHEDULABLE",
	405:  "ADDRESS_NODE_UNREACHABLE",
	406:  "ADDRESS_NODE_NOT_READY",
	407:  "ADDRESS_FAILED_SCHEDULING",
	408:  "CHECK_HOST_CONNECTION",
	501:  "START_MINIKUBE",
	502:  "UNPAUSE_MINIKUBE",
	551:  "RUN_DOCKER_PULL",
	600:  "SET_RENDER_FLAG_OFFLINE_FALSE",
	601:  "KPTFILE_MANUAL_INIT",
	602:  "KPTFILE_CHECK_YAML",
	700:  "CONFIG_CHECK_FILE_PATH",
	701:  "CONFIG_CHECK_DEPENDENCY_DEFINITION",
	702:  "CONFIG_CHANGE_NAMES",
	703:  "CONFIG_CHECK_FILTER",
	704:  "CONFIG_CHECK_PROFILE_DEFINITION",
	705:  "CONFIG_CHECK_DEPENDENCY_PROFILES_SELECTION",
	706:  "CONFIG_CHECK_PROFILE_SELECTION",
	707:  "CONFIG_FIX_API_VERSION",
	708:  "CONFIG_ALLOWLIST_VALIDATORS",
	709:  "CONFIG_ALLOWLIST_transformers",
	800:  "INSPECT_USE_MODIFY_OR_NEW_PROFILE",
	801:  "INSPECT_USE_ADD_BUILD_ENV",
	802:  "INSPECT_CHECK_INPUT_PROFILE",
	900:  "OPEN_ISSUE",
	1000: "CHECK_CUSTOM_COMMAND",
	1001: "FIX_CUSTOM_COMMAND_TIMEOUT",
	1002: "CHECK_CUSTOM_COMMAND_DEPENDENCIES_CMD",
	1003: "CHECK_CUSTOM_COMMAND_DEPENDENCIES_PATHS",
	1004: "CHECK_TEST_COMMAND_AND_IMAGE_NAME",
}

var SuggestionCode_value = map[string]int32{
	"NIL":                                                    0,
	"ADD_DEFAULT_REPO":                                       100,
	"CHECK_DEFAULT_REPO":                                     101,
	"CHECK_DEFAULT_REPO_GLOBAL_CONFIG":                       102,
	"GCLOUD_DOCKER_AUTH_CONFIGURE":                           103,
	"DOCKER_AUTH_CONFIGURE":                                  104,
	"CHECK_GCLOUD_PROJECT":                                   105,
	"CHECK_DOCKER_RUNNING":                                   106,
	"FIX_USER_BUILD_ERR":                                     107,
	"DOCKER_BUILD_RETRY":                                     108,
	"FIX_CACHE_FROM_ARTIFACT_CONFIG":                         109,
	"FIX_SKAFFOLD_CONFIG_DOCKERFILE":                         110,
	"FIX_JIB_PLUGIN_CONFIGURATION":                           111,
	"FIX_DOCKER_NETWORK_CONTAINER_NAME":                      112,
	"CHECK_DOCKER_NETWORK_CONTAINER_RUNNING":                 113,
	"FIX_DOCKER_NETWORK_MODE_WHEN_EXTRACTING_CONTAINER_NAME": 114,
	"RUN_DOCKER_PRUNE":                                       115,
	"SET_CLEANUP_FLAG":                                       116,
	"CHECK_CLUSTER_CONNECTION":                               201,
	"CHECK_MINIKUBE_STATUS":                                  202,
	"INSTALL_HELM":                                           203,
	"UPGRADE_HELM":                                           204,
	"FIX_SKAFFOLD_CONFIG_HELM_ARTIFACT_OVERRIDES":            205,
	"UPGRADE_HELM32":                                         206,
	"FIX_SKAFFOLD_CONFIG_HELM_CREATE_NAMESPACE":              207,
	"INSTALL_KUBECTL":                                        220,
	"CHECK_CONTAINER_LOGS":                                   301,
	"CHECK_READINESS_PROBE":                                  302,
	"CHECK_CONTAINER_IMAGE":                                  303,
	"ADDRESS_NODE_MEMORY_PRESSURE":                           400,
	"ADDRESS_NODE_DISK_PRESSURE":                             401,
	"ADDRESS_NODE_NETWORK_UNAVAILABLE":                       402,
	"ADDRESS_NODE_PID_PRESSURE":                              403,
	"ADDRESS_NODE_UNSCHEDULABLE":                             404,
	"ADDRESS_NODE_UNREACHABLE":                               405,
	"ADDRESS_NODE_NOT_READY":                                 406,
	"ADDRESS_FAILED_SCHEDULING":                              407,
	"CHECK_HOST_CONNECTION":                                  408,
	"START_MINIKUBE":                                         501,
	"UNPAUSE_MINIKUBE":                                       502,
	"RUN_DOCKER_PULL":                                        551,
	"SET_RENDER_FLAG_OFFLINE_FALSE":                          600,
	"KPTFILE_MANUAL_INIT":                                    601,
	"KPTFILE_CHECK_YAML":                                     602,
	"CONFIG_CHECK_FILE_PATH":                                 700,
	"CONFIG_CHECK_DEPENDENCY_DEFINITION":                     701,
	"CONFIG_CHANGE_NAMES":                                    702,
	"CONFIG_CHECK_FILTER":                                    703,
	"CONFIG_CHECK_PROFILE_DEFINITION":                        704,
	"CONFIG_CHECK_DEPENDENCY_PROFILES_SELECTION":             705,
	"CONFIG_CHECK_PROFILE_SELECTION":                         706,
	"CONFIG_FIX_API_VERSION":                                 707,
	"CONFIG_ALLOWLIST_VALIDATORS":                            708,
	"CONFIG_ALLOWLIST_transformers":                          709,
	"INSPECT_USE_MODIFY_OR_NEW_PROFILE":                      800,
	"INSPECT_USE_ADD_BUILD_ENV":                              801,
	"INSPECT_CHECK_INPUT_PROFILE":                            802,
	"OPEN_ISSUE":                                             900,
	"CHECK_CUSTOM_COMMAND":                                   1000,
	"FIX_CUSTOM_COMMAND_TIMEOUT":                             1001,
	"CHECK_CUSTOM_COMMAND_DEPENDENCIES_CMD":                  1002,
	"CHECK_CUSTOM_COMMAND_DEPENDENCIES_PATHS":                1003,
	"CHECK_TEST_COMMAND_AND_IMAGE_NAME":                      1004,
}

func (x SuggestionCode) String() string {
	return proto.EnumName(SuggestionCode_name, int32(x))
}

func (SuggestionCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_888b6bd9597961ff, []int{7}
}

func init() {
	proto.RegisterEnum("proto.enums.BuilderType", BuilderType_name, BuilderType_value)
	proto.RegisterEnum("proto.enums.BuildType", BuildType_name, BuildType_value)
	proto.RegisterEnum("proto.enums.TesterType", TesterType_name, TesterType_value)
	proto.RegisterEnum("proto.enums.DeployerType", DeployerType_name, DeployerType_value)
	proto.RegisterEnum("proto.enums.ClusterType", ClusterType_name, ClusterType_value)
	proto.RegisterEnum("proto.enums.LogLevel", LogLevel_name, LogLevel_value)
	proto.RegisterEnum("proto.enums.StatusCode", StatusCode_name, StatusCode_value)
	proto.RegisterEnum("proto.enums.SuggestionCode", SuggestionCode_name, SuggestionCode_value)
}

func init() { proto.RegisterFile("enums.proto", fileDescriptor_888b6bd9597961ff) }

var fileDescriptor_888b6bd9597961ff = []byte{
	// 3032 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x59, 0x57, 0x90, 0x5c, 0xc5,
	0xd5, 0x66, 0x77, 0x76, 0x76, 0x66, 0x5a, 0x84, 0xa6, 0x51, 0xce, 0x12, 0x48, 0xc0, 0xc2, 0x2f,
	0xf1, 0x1b, 0x17, 0x0f, 0x7e, 0xeb, 0xb9, 0xb7, 0x67, 0xa6, 0x35, 0x7d, 0xfb, 0xde, 0xea, 0xee,
	0xbb, 0xab, 0xd5, 0xcb, 0x2d, 0x61, 0xad, 0x84, 0x60, 0xa5, 0x11, 0xbb, 0x2b, 0x6c, 0x1c, 0x79,
	0x70, 0x0e, 0x55, 0x4e, 0x04, 0x87, 0x07, 0xc0, 0x76, 0xf9, 0xc5, 0x80, 0x73, 0x24, 0x1a, 0xbb,
	0xca, 0x98, 0xe4, 0x6c, 0xa0, 0xec, 0x37, 0xbb, 0xca, 0x01, 0x87, 0xb2, 0xc9, 0xd1, 0x75, 0xba,
	0x6f, 0x9c, 0x99, 0xc5, 0x0f, 0x14, 0xa3, 0x3e, 0xdf, 0x3d, 0x7d, 0xce, 0xe9, 0xd3, 0xe7, 0x7c,
	0xa7, 0x17, 0xad, 0x59, 0x38, 0x79, 0xfa, 0xc4, 0xf2, 0xbe, 0x53, 0x4b, 0x83, 0x95, 0x01, 0x59,
	0x63, 0xff, 0xb7, 0xcf, 0x2e, 0xcd, 0x0c, 0xd0, 0x9a, 0xf6, 0xe9, 0xe3, 0x8b, 0x47, 0x16, 0x96,
	0xcc, 0xf5, 0xa7, 0x16, 0xc8, 0x46, 0xb4, 0x36, 0x96, 0x7d, 0x19, 0xce, 0xc9, 0xa4, 0x1d, 0x73,
	0xe1, 0x33, 0x95, 0x98, 0xf9, 0x88, 0xe1, 0x33, 0x48, 0x03, 0xd5, 0x0e, 0xf0, 0x36, 0x9e, 0x20,
	0x2d, 0x54, 0x6f, 0xd3, 0x43, 0x4c, 0xe0, 0x49, 0x72, 0x36, 0x42, 0x16, 0x15, 0x51, 0xaf, 0xaf,
	0x71, 0x8d, 0x20, 0x34, 0xed, 0xc5, 0xda, 0x84, 0x01, 0x9e, 0x82, 0xdf, 0x7d, 0x2a, 0x79, 0x3f,
	0xc4, 0x75, 0xf8, 0xed, 0x87, 0x5e, 0x9f, 0x29, 0x3c, 0x3d, 0xe3, 0xa3, 0x96, 0xdd, 0xd0, 0x6e,
	0xb7, 0x1e, 0x91, 0xca, 0x76, 0xd9, 0x66, 0x6b, 0x50, 0xc3, 0x13, 0xb1, 0x36, 0x4c, 0xe1, 0x09,
	0xd8, 0xb9, 0xeb, 0xb5, 0xf1, 0x24, 0xec, 0x2c, 0x42, 0x8f, 0x0a, 0x5c, 0x9b, 0xe9, 0x23, 0x64,
	0x16, 0x96, 0x57, 0x52, 0xab, 0xd7, 0xa1, 0x73, 0x33, 0x35, 0x86, 0x69, 0x93, 0x69, 0x69, 0xa2,
	0xa9, 0x58, 0x72, 0x83, 0x27, 0xc8, 0x56, 0xb4, 0xd1, 0x0b, 0xa5, 0xa1, 0x5c, 0x32, 0x95, 0x68,
	0xa3, 0x62, 0xcf, 0xc4, 0x8a, 0x59, 0x30, 0x9e, 0x9c, 0x39, 0x88, 0xce, 0xf4, 0x17, 0x4e, 0x2d,
	0x0e, 0xae, 0x4f, 0xd5, 0x6d, 0x42, 0xeb, 0x32, 0x75, 0x3e, 0x8b, 0x44, 0x38, 0x5f, 0x44, 0xa1,
	0x89, 0xa6, 0x7a, 0x4c, 0x04, 0x78, 0x82, 0x9c, 0x85, 0x5a, 0x7d, 0xeb, 0x2b, 0x3f, 0xc4, 0xf0,
	0x24, 0x58, 0xdc, 0x8f, 0xdb, 0xcc, 0x33, 0x02, 0xd7, 0xc0, 0xe2, 0x7e, 0x64, 0xf0, 0xd4, 0x0c,
	0x47, 0x6b, 0xbc, 0xc5, 0xd3, 0xb9, 0x9d, 0xa5, 0xe8, 0xa6, 0xee, 0x65, 0x7a, 0xcf, 0x44, 0xcd,
	0x80, 0x4b, 0x0e, 0x2a, 0x52, 0x8f, 0xfb, 0xcc, 0x79, 0x1c, 0x9a, 0x1e, 0x53, 0xb8, 0x36, 0x73,
	0x00, 0x35, 0xc5, 0xe0, 0x98, 0x58, 0xb8, 0x6e, 0x61, 0x11, 0x96, 0x7d, 0xd6, 0x8e, 0xbb, 0xce,
	0x20, 0x2e, 0x3b, 0x21, 0x9e, 0x80, 0x5f, 0x73, 0x54, 0x49, 0xf7, 0x15, 0x53, 0x2a, 0x54, 0xb8,
	0x06, 0x3f, 0x3b, 0xd4, 0x50, 0x81, 0xa7, 0xe0, 0x67, 0x44, 0x25, 0xf7, 0x70, 0x7d, 0xe6, 0xe9,
	0x3d, 0x08, 0xe9, 0x95, 0xc3, 0x2b, 0xa7, 0x97, 0xbd, 0xc1, 0x91, 0x05, 0x32, 0x8d, 0x26, 0xc3,
	0x3e, 0x3e, 0x83, 0x6c, 0x44, 0xe7, 0x69, 0x43, 0x4d, 0xac, 0xbd, 0x1e, 0xf3, 0xfa, 0x89, 0x8e,
	0x3d, 0x8f, 0x69, 0x8d, 0x7f, 0x3a, 0x41, 0x08, 0x3a, 0xcb, 0x9d, 0x4f, 0xb6, 0xf6, 0xd0, 0x04,
	0x39, 0x0f, 0x9d, 0xad, 0x98, 0x84, 0x0c, 0xc9, 0x16, 0x1f, 0xb1, 0x8b, 0x2e, 0x64, 0xf9, 0xe2,
	0xcf, 0x26, 0xc8, 0xb9, 0xe8, 0x4c, 0x7b, 0x2c, 0xd9, 0xd2, 0xc3, 0xf6, 0x40, 0x9c, 0xc2, 0x28,
	0xd6, 0xbd, 0x84, 0xda, 0xf5, 0xc4, 0x67, 0x92, 0x33, 0x1f, 0x2f, 0x90, 0x2d, 0x68, 0x43, 0x2a,
	0x55, 0xe1, 0x01, 0xe6, 0x99, 0x44, 0x86, 0x26, 0xe9, 0x84, 0xb1, 0xf4, 0xf1, 0x51, 0x72, 0x3e,
	0xda, 0xe1, 0x84, 0x2e, 0xa5, 0x12, 0x9f, 0xb2, 0x20, 0x94, 0x16, 0xa2, 0x62, 0x29, 0xb9, 0xec,
	0xe2, 0x63, 0x64, 0x2d, 0xc2, 0x0e, 0x14, 0x6b, 0xa6, 0x12, 0x17, 0x8d, 0xab, 0x8a, 0x5d, 0xd3,
	0x4f, 0x63, 0x49, 0x67, 0x29, 0x17, 0xb4, 0x2d, 0x18, 0x3e, 0x4e, 0xb6, 0xa1, 0x4d, 0xc3, 0xd2,
	0xd8, 0xf4, 0x42, 0xc5, 0x0f, 0x31, 0x1f, 0x5f, 0x5d, 0x18, 0x95, 0x8a, 0xf5, 0xbc, 0x36, 0x2c,
	0x00, 0xdd, 0xf8, 0x1a, 0xb2, 0x0b, 0x6d, 0xab, 0x08, 0xc1, 0x9a, 0x20, 0xf4, 0x79, 0x87, 0x33,
	0xdf, 0x42, 0x16, 0xc9, 0x05, 0x68, 0xe7, 0x08, 0x84, 0x07, 0x91, 0x60, 0x01, 0x93, 0x26, 0x45,
	0x9d, 0x20, 0xdb, 0xd1, 0xe6, 0x21, 0xef, 0x0c, 0x4d, 0x44, 0xa8, 0xb5, 0x95, 0x9f, 0x1c, 0x91,
	0x77, 0x42, 0xd5, 0xe6, 0xbe, 0xcf, 0xa4, 0x95, 0x0f, 0x46, 0x9c, 0xf0, 0x42, 0xd9, 0x11, 0xdc,
	0x33, 0x56, 0x7c, 0x8a, 0xec, 0x44, 0x5b, 0x2b, 0x62, 0x1b, 0x99, 0x52, 0x78, 0xaf, 0x25, 0xbb,
	0xd1, 0xf6, 0x0a, 0x82, 0xcb, 0x59, 0x2a, 0xb8, 0x9f, 0x44, 0x54, 0x51, 0xe7, 0xed, 0xd2, 0xb0,
	0x11, 0x1d, 0x2e, 0x58, 0x49, 0xc7, 0xf2, 0x88, 0xab, 0x1e, 0xf5, 0x7a, 0x2c, 0xe9, 0xa8, 0x30,
	0x48, 0xa2, 0x58, 0x08, 0xab, 0x65, 0x85, 0xec, 0x40, 0x5b, 0x2a, 0xa8, 0x2e, 0x33, 0x89, 0xcf,
	0xbb, 0x90, 0x29, 0x00, 0x38, 0x3d, 0xe2, 0x8b, 0x0c, 0x13, 0x1d, 0x51, 0x8f, 0x59, 0xf1, 0x7b,
	0x8b, 0x98, 0x2b, 0xd6, 0xe5, 0xda, 0xa8, 0xf9, 0x61, 0x0d, 0xd7, 0x15, 0x90, 0xec, 0xda, 0x1d,
	0xe0, 0xed, 0x24, 0x12, 0x71, 0x97, 0x4b, 0x77, 0xf3, 0xde, 0x56, 0xe4, 0x04, 0x88, 0xba, 0x8a,
	0xfa, 0x82, 0xc1, 0xad, 0xb7, 0x0a, 0xde, 0x5e, 0x1c, 0x3a, 0x48, 0x03, 0x3a, 0xcb, 0x64, 0x2e,
	0xbc, 0x9e, 0xcc, 0xa0, 0xbd, 0x5c, 0x72, 0x93, 0x9b, 0xc7, 0xcc, 0x5c, 0xa8, 0xfa, 0x89, 0xe0,
	0xda, 0x70, 0xd9, 0x4d, 0xf2, 0x8a, 0xa3, 0xf1, 0x3b, 0xc8, 0x3e, 0x34, 0x33, 0x0e, 0x9b, 0x45,
	0xb7, 0xa8, 0x4e, 0x92, 0x06, 0x0c, 0xbf, 0x93, 0x5c, 0x86, 0x2e, 0x1d, 0x87, 0x2f, 0x70, 0x7e,
	0xc8, 0xb4, 0x0d, 0x3a, 0x3b, 0xc8, 0xb5, 0xc1, 0xef, 0x82, 0xa0, 0xbf, 0xd1, 0x0e, 0x41, 0xe8,
	0x33, 0xfc, 0x6e, 0x88, 0xc8, 0x38, 0x54, 0x44, 0x95, 0x76, 0x71, 0x7d, 0x0f, 0xd9, 0x81, 0x36,
	0x97, 0xcb, 0x00, 0x0f, 0x68, 0x97, 0x15, 0xe7, 0xf6, 0xd5, 0x49, 0x72, 0x3e, 0xda, 0x5e, 0x06,
	0x14, 0x36, 0x79, 0x8a, 0x51, 0x70, 0x1d, 0xdf, 0x31, 0x49, 0x76, 0xa3, 0x6d, 0x65, 0x90, 0x8a,
	0x65, 0x09, 0x08, 0x8a, 0xee, 0x9c, 0x24, 0x7b, 0xd0, 0xce, 0xf1, 0x8a, 0x0c, 0x53, 0x01, 0x97,
	0xd4, 0x30, 0x1f, 0xdf, 0x35, 0x49, 0x2e, 0x41, 0x7b, 0xcb, 0x30, 0x57, 0x60, 0xe0, 0xd6, 0x24,
	0x2a, 0x14, 0x22, 0x8c, 0x4d, 0x12, 0x31, 0xe9, 0xc3, 0xbe, 0x5f, 0x7b, 0x03, 0x9d, 0x8a, 0x69,
	0x43, 0x95, 0x35, 0xef, 0x8f, 0x93, 0x64, 0x33, 0x5a, 0x57, 0x86, 0xc5, 0xb2, 0xc7, 0xa8, 0x30,
	0xbd, 0x79, 0xfc, 0xa7, 0x11, 0x15, 0x32, 0xf4, 0x59, 0x12, 0xb0, 0x20, 0x54, 0xf3, 0x49, 0xa4,
	0x98, 0xd6, 0xb1, 0x62, 0xf8, 0x13, 0xb5, 0xe1, 0x30, 0x58, 0x98, 0xcf, 0x75, 0xbf, 0x00, 0x7d,
	0xb2, 0x46, 0x2e, 0x46, 0x17, 0x8c, 0x80, 0xb2, 0xa0, 0x97, 0xcb, 0xcf, 0xa7, 0x6a, 0xc3, 0x11,
	0xb3, 0xd0, 0x08, 0x6e, 0x5e, 0xa6, 0xee, 0xd3, 0xe3, 0xf7, 0x8c, 0x25, 0xfc, 0xcb, 0x8f, 0x9d,
	0xa2, 0xcf, 0xd4, 0xc8, 0x2e, 0xb4, 0x75, 0x0c, 0x48, 0x31, 0xea, 0xf5, 0x2c, 0xe4, 0xc6, 0xda,
	0xf0, 0x19, 0x3b, 0xb3, 0xa0, 0x82, 0x32, 0xea, 0xcf, 0xe3, 0x9b, 0x46, 0x8c, 0xe9, 0x50, 0x2e,
	0x98, 0x9f, 0xa4, 0x1b, 0x41, 0x0c, 0x6f, 0xae, 0x91, 0x0b, 0xd1, 0xee, 0x32, 0x26, 0xed, 0x7f,
	0x10, 0x72, 0xc9, 0x3c, 0xc3, 0x43, 0x57, 0x93, 0x3e, 0x3b, 0x62, 0x75, 0x06, 0x04, 0xe7, 0xfa,
	0x5c, 0x08, 0xe6, 0xe3, 0xcf, 0x8d, 0x44, 0x2a, 0xd7, 0x26, 0x38, 0x9c, 0x74, 0x87, 0x19, 0xaf,
	0x67, 0xf5, 0x7d, 0xbe, 0x36, 0x7c, 0x40, 0xa5, 0x84, 0x28, 0x60, 0x5f, 0x18, 0x89, 0x43, 0x14,
	0xfa, 0x09, 0xe4, 0x3e, 0xa7, 0x82, 0x1f, 0x02, 0x17, 0x1e, 0xac, 0x41, 0x63, 0xcb, 0x4a, 0x83,
	0x6b, 0x12, 0xcf, 0xd4, 0x86, 0xdb, 0x60, 0x2a, 0xc7, 0xcf, 0xd6, 0xc8, 0x5e, 0xb4, 0x6b, 0x8c,
	0x64, 0xe8, 0x00, 0x9e, 0xab, 0x91, 0x19, 0xb4, 0x67, 0x7c, 0x0e, 0xce, 0x51, 0x6e, 0x4b, 0x43,
	0xa6, 0xf3, 0xf9, 0x1a, 0xd9, 0x8e, 0x36, 0x8d, 0xd3, 0xc9, 0x66, 0x99, 0x34, 0xf8, 0xd5, 0x5a,
	0xa9, 0xa3, 0x66, 0x1f, 0xbd, 0x50, 0x83, 0x8e, 0xaa, 0xe7, 0xa5, 0x97, 0x2f, 0xbd, 0x58, 0x2b,
	0x5a, 0x74, 0xb6, 0xf6, 0x52, 0x8d, 0xac, 0x45, 0xe7, 0xf8, 0x6c, 0xd6, 0xde, 0xf7, 0x6c, 0xf5,
	0x65, 0xbb, 0xea, 0x09, 0x46, 0x65, 0x1c, 0xe5, 0xab, 0xaf, 0x58, 0x95, 0x15, 0xe0, 0x6b, 0x35,
	0xb2, 0x09, 0xad, 0x1d, 0x6a, 0x88, 0x4e, 0xf4, 0x7a, 0x2d, 0x6f, 0xe9, 0xd9, 0xd2, 0x0d, 0x53,
	0xa0, 0xd6, 0xda, 0x64, 0xb5, 0xb8, 0x60, 0x3e, 0x39, 0x45, 0x76, 0xa2, 0x2d, 0x99, 0x09, 0xae,
	0x4c, 0x33, 0x95, 0x52, 0x3d, 0x9f, 0x45, 0x1a, 0xdf, 0x53, 0x87, 0x54, 0x1c, 0x41, 0x58, 0xdd,
	0x16, 0x70, 0x6f, 0x1d, 0x8e, 0x71, 0x04, 0x90, 0x86, 0xc4, 0x42, 0xee, 0xab, 0x8f, 0xdd, 0x05,
	0x3a, 0x1f, 0xef, 0x02, 0x04, 0xdf, 0x5f, 0x27, 0x17, 0xa0, 0x1d, 0x45, 0x28, 0x74, 0x1c, 0x45,
	0xa1, 0x82, 0xa6, 0x3b, 0xfb, 0xff, 0x49, 0x40, 0x25, 0xef, 0x00, 0x11, 0x7c, 0xa0, 0x3e, 0x7c,
	0x2d, 0x2c, 0x79, 0xf0, 0xa8, 0xf4, 0x98, 0x4d, 0xd2, 0x5b, 0xa7, 0x87, 0xaf, 0x85, 0xcf, 0xa8,
	0x2f, 0xb8, 0x64, 0x09, 0x3b, 0xe8, 0x31, 0xe6, 0x33, 0x1f, 0xdf, 0x36, 0x0d, 0x81, 0x70, 0x1e,
	0x16, 0x5f, 0xde, 0x3e, 0x4d, 0xd6, 0x21, 0x9c, 0x1a, 0x5d, 0x2c, 0x7f, 0x71, 0x9a, 0x6c, 0x41,
	0xeb, 0x87, 0x5a, 0x65, 0x26, 0xfc, 0xd2, 0x34, 0x14, 0xa9, 0x2a, 0x19, 0x48, 0xb7, 0xc3, 0x5f,
	0x9e, 0x26, 0xdb, 0xd0, 0x46, 0xeb, 0x8d, 0xad, 0xb9, 0x2c, 0x31, 0xb4, 0xdb, 0xcd, 0x99, 0xce,
	0xfb, 0x1b, 0xe0, 0x89, 0x15, 0x67, 0xac, 0x32, 0x89, 0x68, 0xac, 0x1d, 0xcb, 0x08, 0x15, 0xfe,
	0x40, 0x03, 0x02, 0x52, 0x05, 0x94, 0x08, 0x54, 0x8a, 0xfa, 0x60, 0x03, 0xb2, 0xb3, 0xbc, 0x4b,
	0x36, 0x13, 0x38, 0xf9, 0x87, 0x8a, 0x6d, 0x52, 0x79, 0x4e, 0x97, 0x1d, 0xe0, 0xc3, 0x23, 0x80,
	0xec, 0x60, 0x53, 0xc0, 0x47, 0x1a, 0x10, 0x17, 0x07, 0xb0, 0x1c, 0xc1, 0x2d, 0x7f, 0xb4, 0x30,
	0x2f, 0xfd, 0x6e, 0x8e, 0xc2, 0xbd, 0x36, 0x8a, 0x97, 0xbc, 0xfc, 0x58, 0x03, 0x0a, 0x4b, 0x19,
	0x05, 0xe5, 0xbd, 0x43, 0xbd, 0xf2, 0x0e, 0x1f, 0x6f, 0xc0, 0x99, 0x65, 0x91, 0x4f, 0x49, 0xf7,
	0x50, 0x85, 0xfa, 0x4b, 0x03, 0x2a, 0x4a, 0x9e, 0x52, 0xed, 0xb8, 0x9b, 0xf4, 0x98, 0x88, 0x6c,
	0xcf, 0x30, 0x8a, 0xb3, 0x59, 0xd7, 0x19, 0xff, 0xda, 0x20, 0x1b, 0x10, 0xc9, 0x55, 0xb9, 0x1b,
	0x04, 0x82, 0xbf, 0x35, 0xe0, 0x34, 0x52, 0x01, 0x8c, 0x07, 0x09, 0x8d, 0x22, 0x31, 0x9f, 0x08,
	0xda, 0x66, 0x42, 0xe3, 0xa7, 0x1b, 0x70, 0x93, 0xca, 0xe2, 0x8c, 0x94, 0xe2, 0xbf, 0x97, 0xbf,
	0x94, 0x61, 0x12, 0x80, 0x9b, 0x70, 0x00, 0x36, 0xd0, 0xf8, 0x1f, 0x0d, 0xb2, 0x15, 0x6d, 0x28,
	0x7f, 0x39, 0xcb, 0x94, 0xce, 0xcc, 0xfe, 0x67, 0xc3, 0xe5, 0x7d, 0x21, 0x0d, 0xb8, 0xac, 0x20,
	0xfe, 0xd5, 0x70, 0xb7, 0xcb, 0x22, 0xb2, 0x82, 0x5a, 0x06, 0xfc, 0xa6, 0xe9, 0x2e, 0x46, 0x05,
	0x10, 0x76, 0x3a, 0x36, 0xa7, 0x81, 0x31, 0x58, 0xd4, 0xbf, 0x1b, 0x25, 0x14, 0x53, 0x45, 0x19,
	0xeb, 0x84, 0x90, 0x93, 0x82, 0x41, 0x24, 0xf1, 0x7f, 0xca, 0xbe, 0x40, 0x1f, 0xc9, 0x6f, 0x96,
	0x55, 0xf2, 0x4c, 0x59, 0x89, 0x15, 0x2b, 0x16, 0x84, 0x86, 0x55, 0x51, 0xcf, 0x96, 0x95, 0x00,
	0x91, 0xaa, 0x8a, 0x9f, 0x2b, 0x07, 0x24, 0xb3, 0x37, 0x8f, 0xe6, 0xf3, 0x36, 0x5f, 0x73, 0x69,
	0x3a, 0x9c, 0x15, 0xf2, 0x17, 0xaa, 0x16, 0x46, 0x02, 0xb8, 0xa4, 0xa3, 0x37, 0x20, 0x7e, 0xb1,
	0x9c, 0x2a, 0x46, 0x51, 0xa9, 0x3b, 0xa1, 0x0a, 0xaa, 0x06, 0xbc, 0x54, 0x3e, 0x4b, 0xcd, 0x8c,
	0x3b, 0x63, 0x2b, 0x7a, 0xb9, 0xbc, 0x7b, 0xfe, 0xd1, 0x9c, 0xe2, 0xc6, 0xa9, 0x7f, 0xa5, 0x9c,
	0x65, 0x8e, 0x6f, 0xe5, 0x28, 0x6b, 0x84, 0xa3, 0xf8, 0xaf, 0x36, 0xc8, 0x45, 0xe8, 0xfc, 0xf2,
	0xa9, 0xa6, 0xc9, 0x2d, 0x1d, 0xdd, 0x2b, 0x28, 0xc3, 0x6b, 0x0d, 0xe8, 0xc0, 0x43, 0xa9, 0xcd,
	0xa5, 0x61, 0x4a, 0x52, 0x51, 0x1e, 0x4f, 0x5e, 0xaf, 0x44, 0x2d, 0x32, 0x96, 0xaf, 0x67, 0x65,
	0x1a, 0xdf, 0xd0, 0x04, 0x97, 0x5c, 0x35, 0xd7, 0x45, 0xdd, 0x04, 0xd1, 0xa3, 0x4d, 0xb2, 0x1e,
	0x9d, 0x6b, 0x45, 0x5e, 0x26, 0x86, 0xf5, 0xc7, 0x8a, 0x75, 0x1e, 0x74, 0x0b, 0x6e, 0xf8, 0x78,
	0x13, 0x42, 0xe0, 0xf0, 0x36, 0xfc, 0x89, 0x17, 0xf8, 0x25, 0x6e, 0xf9, 0xf3, 0x26, 0xb4, 0xc6,
	0x61, 0x39, 0x50, 0x43, 0x19, 0xca, 0xe4, 0x10, 0x53, 0x21, 0xb0, 0x59, 0x67, 0xd6, 0x2f, 0x9a,
	0x10, 0xae, 0x71, 0x58, 0xc3, 0x03, 0xe6, 0x03, 0xeb, 0x03, 0xd8, 0x2f, 0x9b, 0xd0, 0x95, 0xc7,
	0xc1, 0xf2, 0x4a, 0x6a, 0x71, 0xbf, 0x5a, 0x15, 0xc7, 0x0e, 0x32, 0x2f, 0xce, 0x6b, 0xc1, 0xaf,
	0x9b, 0x50, 0x54, 0xc6, 0xe3, 0x78, 0x36, 0xa6, 0xfd, 0xb6, 0x09, 0x01, 0x1d, 0x0b, 0x52, 0x0a,
	0xff, 0x6e, 0xc4, 0x72, 0x9f, 0x01, 0x41, 0x65, 0xd2, 0xe3, 0x4c, 0x5b, 0x28, 0xc0, 0x9e, 0x68,
	0x92, 0x4b, 0xd1, 0x85, 0xab, 0xc2, 0x62, 0x19, 0x50, 0xa5, 0x7b, 0x34, 0x0d, 0xed, 0x93, 0x4d,
	0xe8, 0x83, 0x23, 0x5b, 0x96, 0xeb, 0xd3, 0x53, 0xd6, 0xaa, 0x74, 0x26, 0x1f, 0x39, 0xe6, 0x3f,
	0xac, 0x81, 0xfb, 0x37, 0x22, 0x75, 0xc3, 0xc1, 0x3c, 0x0d, 0xdc, 0x36, 0x2f, 0x22, 0x08, 0xd3,
	0x2a, 0x28, 0x68, 0x7a, 0x01, 0x75, 0xf7, 0x00, 0xc1, 0x5e, 0x69, 0xaa, 0x58, 0x10, 0x9c, 0x72,
	0xda, 0x3a, 0xf0, 0xd7, 0x5b, 0x90, 0x07, 0x65, 0x69, 0x3e, 0x1d, 0x5a, 0xf9, 0x37, 0x5a, 0x60,
	0x4b, 0xd1, 0xa0, 0x9d, 0xd7, 0xf3, 0x43, 0xa8, 0x6f, 0xb6, 0x80, 0x13, 0x66, 0xa8, 0x38, 0x12,
	0xdc, 0xb3, 0xf7, 0x80, 0x06, 0x4c, 0x27, 0x9a, 0x06, 0xcc, 0xa9, 0x06, 0xe8, 0xb7, 0x5a, 0x10,
	0xcb, 0x55, 0xa0, 0xd4, 0x53, 0x30, 0x3f, 0x03, 0xd8, 0x5d, 0xb1, 0x6f, 0xb7, 0xa0, 0xb3, 0xa6,
	0xe8, 0x36, 0xf5, 0x41, 0x64, 0xd2, 0xd4, 0xfe, 0x4e, 0x59, 0x66, 0x33, 0xb2, 0x30, 0xe8, 0xbb,
	0x65, 0xb7, 0x5c, 0x89, 0x8f, 0x54, 0x58, 0xe8, 0xfd, 0x5e, 0x59, 0xee, 0xb3, 0x0e, 0x8d, 0x85,
	0x49, 0x66, 0xa9, 0x88, 0x53, 0xf9, 0xf7, 0x5b, 0x70, 0x61, 0xab, 0x41, 0x33, 0x3d, 0x9d, 0xe8,
	0xb8, 0xad, 0x0d, 0x37, 0x45, 0x12, 0xfe, 0xa0, 0x45, 0xfe, 0x0f, 0x5d, 0x94, 0x02, 0x83, 0x58,
	0x18, 0x9e, 0xf0, 0x00, 0x18, 0x4b, 0xb6, 0x5f, 0x75, 0xac, 0xff, 0x61, 0x0b, 0x0a, 0x57, 0x0a,
	0xcf, 0x2d, 0xaa, 0x06, 0xf3, 0xee, 0x16, 0xe4, 0x75, 0x8a, 0xc9, 0x48, 0x26, 0x8d, 0x78, 0xa5,
	0x1d, 0xdc, 0xd3, 0x82, 0x02, 0x39, 0x04, 0xb2, 0x67, 0x4f, 0x4d, 0xa8, 0xf0, 0xbd, 0x2d, 0x68,
	0x27, 0x43, 0xe2, 0xbc, 0x50, 0x32, 0x85, 0xef, 0x6b, 0x01, 0x79, 0xe6, 0x52, 0x47, 0xcc, 0x33,
	0x49, 0x89, 0x58, 0xe3, 0x1b, 0x11, 0x9c, 0x65, 0x26, 0x71, 0xa4, 0x86, 0xc9, 0xd9, 0x84, 0x0a,
	0x3b, 0x71, 0xb8, 0x21, 0xd6, 0x45, 0xe9, 0xa6, 0x55, 0xa0, 0x5c, 0x7a, 0xa1, 0x52, 0xb0, 0x06,
	0x93, 0xbb, 0x85, 0xde, 0x8c, 0xc0, 0xf1, 0x0c, 0x9a, 0xc5, 0xa6, 0xea, 0xf8, 0x2d, 0x68, 0xe6,
	0xc1, 0x73, 0xd0, 0xd9, 0xfa, 0xf4, 0xb1, 0x63, 0x0b, 0xcb, 0x2b, 0xc7, 0x07, 0x27, 0xed, 0x93,
	0x57, 0x03, 0xd5, 0x24, 0x17, 0xf8, 0x0c, 0xb2, 0x16, 0x61, 0xea, 0xfb, 0xf9, 0x69, 0x29, 0x16,
	0x85, 0xf8, 0x08, 0x59, 0x8f, 0x48, 0x46, 0xf0, 0x4a, 0xeb, 0x0b, 0x30, 0x63, 0x8f, 0xae, 0x27,
	0x5d, 0x11, 0xb6, 0xa9, 0x48, 0x0b, 0x27, 0x3e, 0x4a, 0x76, 0xa2, 0xad, 0x5d, 0x4f, 0x84, 0x71,
	0xce, 0xdb, 0x68, 0x6c, 0x7a, 0xa9, 0x18, 0xe6, 0xb8, 0x63, 0x64, 0x13, 0x5a, 0x37, 0x5e, 0x74,
	0x15, 0xd9, 0x88, 0xd6, 0xba, 0x2d, 0x52, 0x15, 0xe9, 0x13, 0x18, 0x3e, 0x5e, 0x48, 0xd2, 0x4f,
	0xb3, 0xd7, 0xae, 0xab, 0xc1, 0xdc, 0x0e, 0x3f, 0xe8, 0xea, 0x73, 0x1a, 0x30, 0xfb, 0x2a, 0xb5,
	0x1e, 0x91, 0x14, 0x9b, 0x3d, 0x94, 0x18, 0x35, 0x8f, 0x17, 0xc9, 0x6e, 0xb4, 0x1d, 0xf0, 0xa5,
	0x67, 0x99, 0x9c, 0x39, 0xa5, 0x4e, 0x9c, 0xc8, 0x30, 0xba, 0x4f, 0x3b, 0x9d, 0x50, 0xf8, 0x39,
	0x9d, 0xce, 0x5f, 0x7c, 0xf0, 0x49, 0x70, 0x14, 0x30, 0xa5, 0x47, 0x95, 0xcc, 0x13, 0x6a, 0x29,
	0xc1, 0x80, 0xec, 0x41, 0xbb, 0x00, 0xb1, 0xea, 0x2b, 0x86, 0x7d, 0xed, 0x38, 0x45, 0x66, 0xd0,
	0xde, 0x8a, 0x6b, 0xa3, 0xc0, 0xcc, 0xd9, 0x6b, 0xc9, 0x5b, 0xd0, 0x15, 0x63, 0x54, 0x5a, 0xb2,
	0x32, 0xd7, 0x63, 0x50, 0xa7, 0x8d, 0xa2, 0x5e, 0xf5, 0x05, 0xc6, 0xed, 0xb3, 0x04, 0xa7, 0x0d,
	0x55, 0x3a, 0xfd, 0x36, 0x52, 0xb1, 0x64, 0x78, 0x19, 0x56, 0xa1, 0x95, 0x67, 0x94, 0xae, 0x23,
	0x68, 0x17, 0xaf, 0xd8, 0x9b, 0xe0, 0xc6, 0xb7, 0x11, 0xd6, 0x88, 0x1f, 0x9a, 0xb0, 0x55, 0xc2,
	0x8a, 0x73, 0x02, 0xed, 0x06, 0x83, 0xf4, 0xc1, 0x93, 0x4b, 0x6d, 0xa0, 0x76, 0xdb, 0xd7, 0xe2,
	0x87, 0xed, 0x52, 0x1c, 0x75, 0x15, 0xf5, 0x99, 0x5b, 0x7a, 0x64, 0x82, 0x5c, 0x86, 0x2e, 0x19,
	0x17, 0x61, 0x47, 0x20, 0xb3, 0xf3, 0x08, 0x67, 0x99, 0x52, 0xdc, 0x67, 0x1a, 0x3f, 0x6a, 0x5f,
	0x57, 0xcb, 0x4a, 0x2e, 0x7f, 0x13, 0x7e, 0x6c, 0x82, 0xec, 0x43, 0x17, 0xaf, 0xaa, 0x26, 0xa3,
	0x0e, 0x50, 0x07, 0x23, 0xea, 0x31, 0xfc, 0xf8, 0x04, 0x8c, 0x27, 0x99, 0x71, 0xd9, 0x8b, 0xf5,
	0xef, 0x27, 0x80, 0x02, 0x0c, 0x0f, 0xab, 0x22, 0xec, 0x6a, 0x7c, 0xc7, 0x64, 0xe1, 0x29, 0x5c,
	0x55, 0x2e, 0x99, 0xd6, 0x90, 0x94, 0x6d, 0x86, 0xef, 0x2c, 0xc9, 0x8a, 0xcf, 0x2c, 0x97, 0xc1,
	0x77, 0x4d, 0x42, 0xbf, 0xa2, 0xbe, 0xaf, 0x00, 0xbf, 0xda, 0x13, 0xca, 0x0e, 0xb4, 0xb9, 0x02,
	0x19, 0x79, 0x3e, 0xd9, 0x83, 0x76, 0x56, 0x00, 0xab, 0x3c, 0x9d, 0x6c, 0x47, 0x9b, 0x2a, 0xb0,
	0xe1, 0x67, 0x93, 0xe1, 0x7d, 0x46, 0x9e, 0x4c, 0xb6, 0xa1, 0x8d, 0x43, 0x80, 0xca, 0x73, 0xc9,
	0x16, 0xb4, 0xbe, 0x6a, 0x46, 0xf9, 0xa9, 0xa4, 0xb4, 0xf9, 0xd8, 0x67, 0x92, 0x3c, 0x46, 0xbd,
	0x50, 0x9b, 0x72, 0x16, 0xdd, 0x62, 0xa7, 0x7b, 0xfb, 0x2a, 0x95, 0x67, 0x11, 0x7e, 0xb6, 0x06,
	0x23, 0x51, 0x2c, 0xed, 0xbc, 0x56, 0x2c, 0x3f, 0x67, 0xe7, 0xf6, 0x72, 0xf2, 0xc6, 0x42, 0xe0,
	0xaf, 0x4c, 0xd9, 0x89, 0x94, 0x81, 0x35, 0xb6, 0x65, 0x43, 0xee, 0xe6, 0x04, 0xbe, 0x43, 0x85,
	0x66, 0xf8, 0x89, 0x29, 0x28, 0xca, 0x59, 0x2f, 0x0f, 0xa8, 0x8c, 0xa9, 0xb0, 0xb4, 0x00, 0xc6,
	0xf3, 0x0d, 0x88, 0x64, 0x12, 0x67, 0x23, 0x30, 0x01, 0xfc, 0xd4, 0x14, 0x78, 0x9c, 0x26, 0x52,
	0xfa, 0x00, 0x94, 0xb5, 0x2b, 0x7c, 0x77, 0xbd, 0xd4, 0xc5, 0xf2, 0x07, 0x98, 0xac, 0x85, 0xfb,
	0xac, 0x63, 0xdf, 0x58, 0x42, 0x09, 0xb3, 0xfd, 0x46, 0x74, 0x5e, 0x0e, 0xa4, 0xb2, 0x9b, 0x66,
	0x22, 0x0c, 0xf5, 0x65, 0x49, 0xaa, 0xdf, 0x40, 0x07, 0xa9, 0x97, 0x98, 0x41, 0xfa, 0x6c, 0x93,
	0x96, 0xf5, 0x92, 0xe6, 0xfb, 0xeb, 0x64, 0x3f, 0x9a, 0x59, 0xcd, 0x84, 0xbc, 0x03, 0x6a, 0x26,
	0xd2, 0x48, 0x3f, 0x50, 0x2f, 0x75, 0xbf, 0xaa, 0xda, 0x02, 0xf4, 0xa3, 0x7a, 0xc9, 0x6b, 0xb8,
	0x52, 0xa5, 0xf6, 0x88, 0x1f, 0xb4, 0x8f, 0x0c, 0x59, 0xef, 0x17, 0x22, 0x9c, 0xb3, 0xd3, 0x49,
	0xde, 0x1c, 0x35, 0xfe, 0x71, 0xbd, 0xd4, 0x85, 0x0b, 0xc4, 0xca, 0xd2, 0xe1, 0x93, 0xcb, 0x47,
	0x07, 0x4b, 0x27, 0x16, 0x96, 0x96, 0xf1, 0x4f, 0xea, 0x40, 0xaf, 0xf2, 0x06, 0xa9, 0x99, 0xfb,
	0x23, 0xc1, 0x7c, 0x12, 0x42, 0x25, 0x9b, 0xcb, 0x8c, 0xc2, 0xb7, 0x4e, 0xbb, 0xc9, 0xbb, 0xc0,
	0x41, 0x93, 0xca, 0x7b, 0x21, 0xbe, 0x6d, 0x1a, 0xac, 0xc9, 0xe4, 0xe9, 0x3b, 0xad, 0x8c, 0xe2,
	0xbc, 0x09, 0xe2, 0xdb, 0xa7, 0xc9, 0x39, 0x08, 0x85, 0x11, 0x93, 0x09, 0xd7, 0x3a, 0x66, 0xf8,
	0x7d, 0x8d, 0xd2, 0x1d, 0x4f, 0x19, 0x64, 0x18, 0x04, 0x54, 0xfa, 0xf8, 0xcf, 0x76, 0x4c, 0xb4,
	0x1d, 0xa1, 0x22, 0xb0, 0x4c, 0x3b, 0x8c, 0x0d, 0x0c, 0xc8, 0x33, 0x68, 0xcf, 0xb8, 0x6f, 0x47,
	0xa8, 0x2d, 0x4c, 0xc9, 0x40, 0xc5, 0xfe, 0x27, 0xd6, 0x52, 0x1f, 0x18, 0x9d, 0xf7, 0xa2, 0x5d,
	0x0e, 0xed, 0xc8, 0x6d, 0x8a, 0x85, 0xff, 0xdc, 0x68, 0x66, 0x4b, 0xf7, 0xd3, 0x8d, 0xf6, 0x15,
	0x87, 0xde, 0x7c, 0xec, 0xf8, 0xca, 0x55, 0xa7, 0xaf, 0xdc, 0xf7, 0xd6, 0xc1, 0x89, 0xfd, 0xdd,
	0xc1, 0xe0, 0xd8, 0xe2, 0x82, 0x37, 0x38, 0xb9, 0x72, 0xf8, 0xf8, 0xc9, 0x85, 0x25, 0x33, 0x18,
	0x2c, 0x2e, 0xef, 0x5f, 0xbe, 0xe6, 0xf0, 0xd1, 0xa3, 0x83, 0xc5, 0x23, 0xfb, 0xed, 0x5f, 0x38,
	0xf7, 0xdb, 0xbf, 0x70, 0x5e, 0x39, 0x6d, 0xff, 0x71, 0xf9, 0x7f, 0x03, 0x00, 0x00, 0xff, 0xff,
	0x03, 0xfd, 0x32, 0xb0, 0x04, 0x1d, 0x00, 0x00,
}
